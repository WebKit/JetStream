/*! For license information please see chai.bundle.min.js.LICENSE.txt */
(()=>{"use strict";var e={d:(t,o)=>{for(var n in o)e.o(o,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:o[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{runTest:()=>zt});var o={};e.r(o),e.d(o,{compatibleConstructor:()=>s,compatibleInstance:()=>r,compatibleMessage:()=>i,getConstructorName:()=>l,getMessage:()=>h});var n={};function a(e){return e instanceof Error||"[object Error]"===Object.prototype.toString.call(e)}function r(e,t){return a(t)&&e===t}function s(e,t){return a(t)?e.constructor===t.constructor||e instanceof t.constructor:!("object"!=typeof t&&"function"!=typeof t||!t.prototype)&&(e.constructor===t||e instanceof t)}function i(e,t){const o="string"==typeof e?e:e.message;return n=t,"[object RegExp]"===Object.prototype.toString.call(n)?t.test(o):"string"==typeof t&&-1!==o.indexOf(t);var n}function l(e){let t=e;return a(e)?t=e.constructor.name:"function"==typeof e&&(t=e.name,""===t)&&(t=(new e).name||t),t}function h(e){let t="";return e&&e.message?t=e.message:"string"==typeof e&&(t=e),t}function b(e,t,o){let n=e.__flags||(e.__flags=Object.create(null));if(3!==arguments.length)return n[t];n[t]=o}function c(e,t){let o=b(e,"negate"),n=t[0];return o?!n:n}function d(e){if(void 0===e)return"undefined";if(null===e)return"null";const t=e[Symbol.toStringTag];return"string"==typeof t?t:Object.prototype.toString.call(e).slice(8,-1)}e.r(n),e.d(n,{op:()=>$e,Zg:()=>je,hm:()=>Oe,Lq:()=>o,DI:()=>Ae,J_:()=>re,Jt:()=>b,HX:()=>f,I4:()=>Q,mG:()=>Le,F5:()=>_e,Iq:()=>Ce,aM:()=>ge,i5:()=>me,Nn:()=>G,yr:()=>Be,kf:()=>Re,gd:()=>Ve,Qz:()=>Z,IQ:()=>Fe,tx:()=>ze,rM:()=>Ie,yH:()=>Ee,t6:()=>c,Nk:()=>X,NW:()=>d});const u="captureStackTrace"in Error;class p extends Error{message;get name(){return"AssertionError"}get ok(){return!1}constructor(e="Unspecified AssertionError",t,o){super(e),this.message=e,u&&Error.captureStackTrace(this,o||p);for(const e in t)e in this||(this[e]=t[e])}toJSON(e){return{...this,name:this.name,message:this.message,ok:!1,stack:!1!==e?this.stack:void 0}}}function f(e,t){return t.length>4?t[4]:e._obj}const w={bold:["1","22"],dim:["2","22"],italic:["3","23"],underline:["4","24"],inverse:["7","27"],hidden:["8","28"],strike:["9","29"],black:["30","39"],red:["31","39"],green:["32","39"],yellow:["33","39"],blue:["34","39"],magenta:["35","39"],cyan:["36","39"],white:["37","39"],brightblack:["30;1","39"],brightred:["31;1","39"],brightgreen:["32;1","39"],brightyellow:["33;1","39"],brightblue:["34;1","39"],brightmagenta:["35;1","39"],brightcyan:["36;1","39"],brightwhite:["37;1","39"],grey:["90","39"]},m={special:"cyan",number:"yellow",bigint:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",symbol:"green",date:"magenta",regexp:"red"},y="â€¦";function g(e,t){const o=w[m[t]]||w[t]||"";return o?`[${o[0]}m${String(e)}[${o[1]}m`:String(e)}function v(e,t,o=y){e=String(e);const n=o.length,a=e.length;if(n>t&&a>n)return o;if(a>t&&a>n){let a=t-n;return a>0&&(r=e[a-1])>="\ud800"&&r<="\udbff"&&(a-=1),`${e.slice(0,a)}${o}`}var r;return e}function x(e,t,o,n=", "){o=o||t.inspect;const a=e.length;if(0===a)return"";const r=t.truncate;let s="",i="",l="";for(let h=0;h<a;h+=1){const a=h+1===e.length,b=h+2===e.length;l=`${y}(${e.length-h})`;const c=e[h];t.truncate=r-s.length-(a?0:n.length);const d=i||o(c,t)+(a?"":n),u=s.length+d.length,p=u+l.length;if(a&&u>r&&s.length+l.length<=r)break;if(!a&&!b&&p>r)break;if(i=a?"":o(e[h+1],t)+(b?"":n),!a&&b&&p>r&&u+i.length>r)break;if(s+=d,!a&&!b&&u+i.length>=r){l=`${y}(${e.length-h-1})`;break}l=""}return`${s}${l}`}function O([e,t],o){return o.truncate-=2,"string"==typeof e?e=function(e){return e.match(/^[a-zA-Z_][a-zA-Z_0-9]*$/)?e:JSON.stringify(e).replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'")}(e):"number"!=typeof e&&(e=`[${o.inspect(e,o)}]`),o.truncate-=e.length,`${e}: ${t=o.inspect(t,o)}`}function N(e,t){const o=(e=>"function"==typeof Buffer&&e instanceof Buffer?"Buffer":e[Symbol.toStringTag]?e[Symbol.toStringTag]:e.constructor.name)(e);t.truncate-=o.length+4;const n=Object.keys(e).slice(e.length);if(!e.length&&!n.length)return`${o}[]`;let a="";for(let o=0;o<e.length;o++){const n=`${t.stylize(v(e[o],t.truncate),"number")}${o===e.length-1?"":", "}`;if(t.truncate-=n.length,e[o]!==e.length&&t.truncate<=3){a+=`${y}(${e.length-e[o]+1})`;break}a+=n}let r="";return n.length&&(r=x(n.map(t=>[t,e[t]]),t,O)),`${o}[ ${a}${r?`, ${r}`:""} ]`}function k(e,t){const o=e[Symbol.toStringTag]||"Function",n=e.name;return n?t.stylize(`[${o} ${v(n,t.truncate-11)}]`,"special"):t.stylize(`[${o}]`,"special")}function S([e,t],o){return o.truncate-=4,e=o.inspect(e,o),o.truncate-=e.length,`${e} => ${t=o.inspect(t,o)}`}const E=Number.isNaN||(e=>e!=e);function j(e,t){return E(e)?t.stylize("NaN","number"):e===1/0?t.stylize("Infinity","number"):e===-1/0?t.stylize("-Infinity","number"):0===e?t.stylize(1/e==1/0?"+0":"-0","number"):t.stylize(v(String(e),t.truncate),"number")}function I(e,t){let o=v(e.toString(),t.truncate-1);return o!==y&&(o+="n"),t.stylize(o,"bigint")}const z=new RegExp("['\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]","g"),q={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r","'":"\\'","\\":"\\\\"};function D(e){return q[e]||`\\u${`0000${e.charCodeAt(0).toString(16)}`.slice(-4)}`}function T(e,t){return z.test(e)&&(e=e.replace(z,D)),t.stylize(`'${v(e,t.truncate-2)}'`,"string")}function M(e){return"description"in Symbol.prototype?e.description?`Symbol(${e.description})`:"Symbol()":e.toString()}function P(e,t){const o=Object.getOwnPropertyNames(e),n=Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(e):[];if(0===o.length&&0===n.length)return"{}";if(t.truncate-=4,t.seen=t.seen||[],t.seen.includes(e))return"[Circular]";t.seen.push(e);const a=x(o.map(t=>[t,e[t]]),t,O),r=x(n.map(t=>[t,e[t]]),t,O);t.seen.pop();let s="";return a&&r&&(s=", "),`{ ${a}${s}${r} }`}const $=!("undefined"==typeof Symbol||!Symbol.toStringTag)&&Symbol.toStringTag,F=["stack","line","column","name","message","fileName","lineNumber","columnNumber","number","description","cause"];function A([e,t],o){return o.truncate-=3,t?`${o.stylize(String(e),"yellow")}=${o.stylize(`"${t}"`,"string")}`:`${o.stylize(String(e),"yellow")}`}function C(e,t){return x(e,t,B,"\n")}function B(e,t){switch(e.nodeType){case 1:return _(e,t);case 3:return t.inspect(e.data,t);default:return t.inspect(e,t)}}function _(e,t){const o=e.getAttributeNames(),n=e.tagName.toLowerCase(),a=t.stylize(`<${n}`,"special"),r=t.stylize(">","special"),s=t.stylize(`</${n}>`,"special");t.truncate-=2*n.length+5;let i="";o.length>0&&(i+=" ",i+=x(o.map(t=>[t,e.getAttribute(t)]),t,A," ")),t.truncate-=i.length;const l=t.truncate;let h=C(e.children,t);return h&&h.length>l&&(h=`${y}(${e.children.length})`),`${a}${i}${r}${h}${s}`}const L="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("chai/inspect"):"@@chai/inspect",V=Symbol.for("nodejs.util.inspect.custom"),R=new WeakMap,K={},W={undefined:(e,t)=>t.stylize("undefined","undefined"),null:(e,t)=>t.stylize("null","null"),boolean:(e,t)=>t.stylize(String(e),"boolean"),Boolean:(e,t)=>t.stylize(String(e),"boolean"),number:j,Number:j,bigint:I,BigInt:I,string:T,String:T,function:k,Function:k,symbol:M,Symbol:M,Array:function(e,t){const o=Object.keys(e).slice(e.length);if(!e.length&&!o.length)return"[]";t.truncate-=4;const n=x(e,t);t.truncate-=n.length;let a="";return o.length&&(a=x(o.map(t=>[t,e[t]]),t,O)),`[ ${n}${a?`, ${a}`:""} ]`},Date:function(e,t){const o=e.toJSON();if(null===o)return"Invalid Date";const n=o.split("T"),a=n[0];return t.stylize(`${a}T${v(n[1],t.truncate-a.length-1)}`,"date")},Map:function(e,t){return 0===e.size?"Map{}":(t.truncate-=7,`Map{ ${x(function(e){const t=[];return e.forEach((e,o)=>{t.push([o,e])}),t}(e),t,S)} }`)},Set:function(e,t){return 0===e.size?"Set{}":(t.truncate-=7,`Set{ ${x(function(e){const t=[];return e.forEach(e=>{t.push(e)}),t}(e),t)} }`)},RegExp:function(e,t){const o=e.toString().split("/")[2],n=t.truncate-(2+o.length),a=e.source;return t.stylize(`/${v(a,n)}/${o}`,"regexp")},Promise:()=>"Promise{â€¦}",WeakSet:(e,t)=>t.stylize("WeakSet{â€¦}","special"),WeakMap:(e,t)=>t.stylize("WeakMap{â€¦}","special"),Arguments:function(e,t){return 0===e.length?"Arguments[]":(t.truncate-=13,`Arguments[ ${x(e,t)} ]`)},Int8Array:N,Uint8Array:N,Uint8ClampedArray:N,Int16Array:N,Uint16Array:N,Int32Array:N,Uint32Array:N,Float32Array:N,Float64Array:N,Generator:()=>"",DataView:()=>"",ArrayBuffer:()=>"",Error:function(e,t){const o=Object.getOwnPropertyNames(e).filter(e=>-1===F.indexOf(e)),n=e.name;t.truncate-=n.length;let a="";if("string"==typeof e.message?a=v(e.message,t.truncate):o.unshift("message"),a=a?`: ${a}`:"",t.truncate-=a.length+5,t.seen=t.seen||[],t.seen.includes(e))return"[Circular]";t.seen.push(e);const r=x(o.map(t=>[t,e[t]]),t,O);return`${n}${a}${r?` { ${r} }`:""}`},HTMLCollection:C,NodeList:C},H=(e,t,o)=>L in e&&"function"==typeof e[L]?e[L](t):V in e&&"function"==typeof e[V]?e[V](t.depth,t):"inspect"in e&&"function"==typeof e.inspect?e.inspect(t.depth,t):"constructor"in e&&R.has(e.constructor)?R.get(e.constructor)(e,t):K[o]?K[o](e,t):"",U=Object.prototype.toString;function Y(e,t={}){const o=function({showHidden:e=!1,depth:t=2,colors:o=!1,customInspect:n=!0,showProxy:a=!1,maxArrayLength:r=1/0,breakLength:s=1/0,seen:i=[],truncate:l=1/0,stylize:h=String}={},b){const c={showHidden:Boolean(e),depth:Number(t),colors:Boolean(o),customInspect:Boolean(n),showProxy:Boolean(a),maxArrayLength:Number(r),breakLength:Number(s),truncate:Number(l),seen:i,inspect:b,stylize:h};return c.colors&&(c.stylize=g),c}(t,Y),{customInspect:n}=o;let a=null===e?"null":typeof e;if("object"===a&&(a=U.call(e).slice(8,-1)),a in W)return W[a](e,o);if(n&&e){const t=H(e,o,a);if(t)return"string"==typeof t?t:Y(t,o)}const r=!!e&&Object.getPrototypeOf(e);return r===Object.prototype||null===r?P(e,o):e&&"function"==typeof HTMLElement&&e instanceof HTMLElement?_(e,o):"constructor"in e?e.constructor!==Object?function(e,t){let o="";return $&&$ in e&&(o=e[$]),o=o||e.constructor.name,o&&"_class"!==o||(o="<Anonymous Class>"),t.truncate-=o.length,`${o}${P(e,t)}`}(e,o):P(e,o):e===Object(e)?P(e,o):o.stylize(String(e),a)}const J={includeStack:!1,showDiff:!0,truncateThreshold:40,useProxy:!0,proxyExcludedKeys:["then","catch","inspect","toJSON"],deepEqual:null};function G(e,t,o,n){return Y(e,{colors:n,depth:void 0===o?2:o,showHidden:t,truncate:J.truncateThreshold?J.truncateThreshold:1/0})}function Z(e){let t=G(e),o=Object.prototype.toString.call(e);if(J.truncateThreshold&&t.length>=J.truncateThreshold){if("[object Function]"===o)return e.name&&""!==e.name?"[Function: "+e.name+"]":"[Function]";if("[object Array]"===o)return"[ Array("+e.length+") ]";if("[object Object]"===o){let t=Object.keys(e);return"{ Object ("+(t.length>2?t.splice(0,2).join(", ")+", ...":t.join(", "))+") }"}return t}return t}function Q(e,t){let o=b(e,"negate"),n=b(e,"object"),a=t[3],r=f(e,t),s=o?t[2]:t[1],i=b(e,"message");return"function"==typeof s&&(s=s()),s=s||"",s=s.replace(/#\{this\}/g,function(){return Z(n)}).replace(/#\{act\}/g,function(){return Z(r)}).replace(/#\{exp\}/g,function(){return Z(a)}),i?i+": "+s:s}function X(e,t,o){let n=e.__flags||(e.__flags=Object.create(null));t.__flags||(t.__flags=Object.create(null)),o=3!==arguments.length||o;for(let e in n)(o||"object"!==e&&"ssfi"!==e&&"lockSsfi"!==e&&"message"!=e)&&(t.__flags[e]=n[e])}function ee(e){if(void 0===e)return"undefined";if(null===e)return"null";const t=e[Symbol.toStringTag];return"string"==typeof t?t:Object.prototype.toString.call(e).slice(8,-1)}function te(){this._key="chai/deep-eql__"+Math.random()+Date.now()}te.prototype={get:function(e){return e[this._key]},set:function(e,t){Object.isExtensible(e)&&Object.defineProperty(e,this._key,{value:t,configurable:!0})}};var oe="function"==typeof WeakMap?WeakMap:te;function ne(e,t,o){if(!o||fe(e)||fe(t))return null;var n=o.get(e);if(n){var a=n.get(t);if("boolean"==typeof a)return a}return null}function ae(e,t,o,n){if(o&&!fe(e)&&!fe(t)){var a=o.get(e);a?a.set(t,n):((a=new oe).set(t,n),o.set(e,a))}}const re=se;function se(e,t,o){if(o&&o.comparator)return le(e,t,o);var n=ie(e,t);return null!==n?n:le(e,t,o)}function ie(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t||!fe(e)&&!fe(t)&&null}function le(e,t,o){(o=o||{}).memoize=!1!==o.memoize&&(o.memoize||new oe);var n=o&&o.comparator,a=ne(e,t,o.memoize);if(null!==a)return a;var r=ne(t,e,o.memoize);if(null!==r)return r;if(n){var s=n(e,t);if(!1===s||!0===s)return ae(e,t,o.memoize,s),s;var i=ie(e,t);if(null!==i)return i}var l=ee(e);if(l!==ee(t))return ae(e,t,o.memoize,!1),!1;ae(e,t,o.memoize,!0);var h=function(e,t,o,n){switch(o){case"String":case"Number":case"Boolean":case"Date":return se(e.valueOf(),t.valueOf());case"Promise":case"Symbol":case"function":case"WeakMap":case"WeakSet":return e===t;case"Error":return pe(e,t,["name","message","code"],n);case"Arguments":case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float32Array":case"Float64Array":case"Array":return he(e,t,n);case"RegExp":return function(e,t){return e.toString()===t.toString()}(e,t);case"Generator":return function(e,t,o){return he(ce(e),ce(t),o)}(e,t,n);case"DataView":return he(new Uint8Array(e.buffer),new Uint8Array(t.buffer),n);case"ArrayBuffer":return he(new Uint8Array(e),new Uint8Array(t),n);case"Set":case"Map":return function(e,t,o){try{if(e.size!==t.size)return!1;if(0===e.size)return!0}catch(e){return!1}var n=[],a=[];return e.forEach(function(e,t){n.push([e,t])}),t.forEach(function(e,t){a.push([e,t])}),he(n.sort(),a.sort(),o)}(e,t,n);case"Temporal.PlainDate":case"Temporal.PlainTime":case"Temporal.PlainDateTime":case"Temporal.Instant":case"Temporal.ZonedDateTime":case"Temporal.PlainYearMonth":case"Temporal.PlainMonthDay":return e.equals(t);case"Temporal.Duration":return e.total("nanoseconds")===t.total("nanoseconds");case"Temporal.TimeZone":case"Temporal.Calendar":return e.toString()===t.toString();default:return function(e,t,o){var n=de(e),a=de(t),r=ue(e),s=ue(t);if(n=n.concat(r),a=a.concat(s),n.length&&n.length===a.length)return!1!==he(we(n).sort(),we(a).sort())&&pe(e,t,n,o);var i=be(e),l=be(t);return i.length&&i.length===l.length?(i.sort(),l.sort(),he(i,l,o)):0===n.length&&0===i.length&&0===a.length&&0===l.length}(e,t,n)}}(e,t,l,o);return ae(e,t,o.memoize,h),h}function he(e,t,o){var n=e.length;if(n!==t.length)return!1;if(0===n)return!0;for(var a=-1;++a<n;)if(!1===se(e[a],t[a],o))return!1;return!0}function be(e){if(function(e){return"undefined"!=typeof Symbol&&"object"==typeof e&&void 0!==Symbol.iterator&&"function"==typeof e[Symbol.iterator]}(e))try{return ce(e[Symbol.iterator]())}catch(e){return[]}return[]}function ce(e){for(var t=e.next(),o=[t.value];!1===t.done;)t=e.next(),o.push(t.value);return o}function de(e){var t=[];for(var o in e)t.push(o);return t}function ue(e){for(var t=[],o=Object.getOwnPropertySymbols(e),n=0;n<o.length;n+=1){var a=o[n];Object.getOwnPropertyDescriptor(e,a).enumerable&&t.push(a)}return t}function pe(e,t,o,n){var a=o.length;if(0===a)return!0;for(var r=0;r<a;r+=1)if(!1===se(e[o[r]],t[o[r]],n))return!1;return!0}function fe(e){return null===e||"object"!=typeof e}function we(e){return e.map(function(e){return"symbol"==typeof e?e.toString():e})}function me(e,t){return null!=e&&t in Object(e)}function ye(e,t,o){let n=e,a=null;o=void 0===o?t.length:o;for(let e=0;e<o;e++){const r=t[e];n&&(n=void 0===r.p?n[r.i]:n[r.p],e===o-1&&(a=n))}return a}function ge(e,t){const o=function(e){return e.replace(/([^\\])\[/g,"$1.[").match(/(\\\.|[^.]+?)+/g).map(e=>{if("constructor"===e||"__proto__"===e||"prototype"===e)return{};const t=/^\[(\d+)\]$/.exec(e);let o=null;return o=t?{i:parseFloat(t[1])}:{p:e.replace(/\\([.[\]])/g,"$1")},o})}(t),n=o[o.length-1],a={parent:o.length>1?ye(e,o,o.length-1):e,name:n.p||n.i,value:ye(e,o)};return a.exists=me(a.parent,a.name),a}class ve{__flags={};constructor(e,t,o,n){return b(this,"ssfi",o||ve),b(this,"lockSsfi",n),b(this,"object",e),b(this,"message",t),b(this,"eql",J.deepEqual||re),Ee(this)}static get includeStack(){return console.warn("Assertion.includeStack is deprecated, use chai.config.includeStack instead."),J.includeStack}static set includeStack(e){console.warn("Assertion.includeStack is deprecated, use chai.config.includeStack instead."),J.includeStack=e}static get showDiff(){return console.warn("Assertion.showDiff is deprecated, use chai.config.showDiff instead."),J.showDiff}static set showDiff(e){console.warn("Assertion.showDiff is deprecated, use chai.config.showDiff instead."),J.showDiff=e}static addProperty(e,t){Oe(this.prototype,e,t)}static addMethod(e,t){je(this.prototype,e,t)}static addChainableMethod(e,t,o){$e(this.prototype,e,t,o)}static overwriteProperty(e,t){Ie(this.prototype,e,t)}static overwriteMethod(e,t){ze(this.prototype,e,t)}static overwriteChainableMethod(e,t,o){Fe(this.prototype,e,t,o)}assert(e,t,o,n,a,r){const s=c(this,arguments);if(!1!==r&&(r=!0),void 0===n&&void 0===a&&(r=!1),!0!==J.showDiff&&(r=!1),!s){t=Q(this,arguments);const e={actual:f(this,arguments),expected:n,showDiff:r},o=_e(this,arguments);throw o&&(e.operator=o),new p(t,e,J.includeStack?this.assert:b(this,"ssfi"))}}get _obj(){return b(this,"object")}set _obj(e){b(this,"object",e)}}function xe(){return J.useProxy&&"undefined"!=typeof Proxy&&"undefined"!=typeof Reflect}function Oe(e,t,o){o=void 0===o?function(){}:o,Object.defineProperty(e,t,{get:function e(){xe()||b(this,"lockSsfi")||b(this,"ssfi",e);let t=o.call(this);if(void 0!==t)return t;let n=new ve;return X(this,n),n},configurable:!0})}const Ne=Object.getOwnPropertyDescriptor(function(){},"length");function ke(e,t,o){return Ne.configurable?(Object.defineProperty(e,"length",{get:function(){if(o)throw Error("Invalid Chai property: "+t+'.length. Due to a compatibility issue, "length" cannot directly follow "'+t+'". Use "'+t+'.lengthOf" instead.');throw Error("Invalid Chai property: "+t+'.length. See docs for proper usage of "'+t+'".')}}),e):e}const Se=["__flags","__methods","_obj","assert"];function Ee(e,t){return xe()?new Proxy(e,{get:function e(o,n){if("string"==typeof n&&-1===J.proxyExcludedKeys.indexOf(n)&&!Reflect.has(o,n)){if(t)throw Error("Invalid Chai property: "+t+"."+n+'. See docs for proper usage of "'+t+'".');let e=null,a=4;throw function(e){let t=Object.getOwnPropertyNames(e);function o(e){-1===t.indexOf(e)&&t.push(e)}let n=Object.getPrototypeOf(e);for(;null!==n;)Object.getOwnPropertyNames(n).forEach(o),n=Object.getPrototypeOf(n);return t}(o).forEach(function(t){if(!Object.prototype.hasOwnProperty(t)&&-1===Se.indexOf(t)){let o=function(e,t,o){if(Math.abs(e.length-t.length)>=o)return o;let n=[];for(let o=0;o<=e.length;o++)n[o]=Array(t.length+1).fill(0),n[o][0]=o;for(let e=0;e<t.length;e++)n[0][e]=e;for(let a=1;a<=e.length;a++){let r=e.charCodeAt(a-1);for(let e=1;e<=t.length;e++)Math.abs(a-e)>=o?n[a][e]=o:n[a][e]=Math.min(n[a-1][e]+1,n[a][e-1]+1,n[a-1][e-1]+(r===t.charCodeAt(e-1)?0:1))}return n[e.length][t.length]}(n,t,a);o<a&&(e=t,a=o)}}),null!==e?Error("Invalid Chai property: "+n+'. Did you mean "'+e+'"?'):Error("Invalid Chai property: "+n)}return-1!==Se.indexOf(n)||b(o,"lockSsfi")||b(o,"ssfi",e),Reflect.get(o,n)}}):e}function je(e,t,o){let n=function(){b(this,"lockSsfi")||b(this,"ssfi",n);let e=o.apply(this,arguments);if(void 0!==e)return e;let t=new ve;return X(this,t),t};ke(n,t,!1),e[t]=Ee(n,t)}function Ie(e,t,o){let n=Object.getOwnPropertyDescriptor(e,t),a=function(){};n&&"function"==typeof n.get&&(a=n.get),Object.defineProperty(e,t,{get:function e(){xe()||b(this,"lockSsfi")||b(this,"ssfi",e);let t=b(this,"lockSsfi");b(this,"lockSsfi",!0);let n=o(a).call(this);if(b(this,"lockSsfi",t),void 0!==n)return n;let r=new ve;return X(this,r),r},configurable:!0})}function ze(e,t,o){let n=e[t],a=function(){throw new Error(t+" is not a function")};n&&"function"==typeof n&&(a=n);let r=function(){b(this,"lockSsfi")||b(this,"ssfi",r);let e=b(this,"lockSsfi");b(this,"lockSsfi",!0);let t=o(a).apply(this,arguments);if(b(this,"lockSsfi",e),void 0!==t)return t;let n=new ve;return X(this,n),n};ke(r,t,!1),e[t]=Ee(r,t)}let qe="function"==typeof Object.setPrototypeOf,De=function(){},Te=Object.getOwnPropertyNames(De).filter(function(e){let t=Object.getOwnPropertyDescriptor(De,e);return"object"!=typeof t||!t.configurable}),Me=Function.prototype.call,Pe=Function.prototype.apply;function $e(e,t,o,n){"function"!=typeof n&&(n=function(){});let a={method:o,chainingBehavior:n};e.__methods||(e.__methods={}),e.__methods[t]=a,Object.defineProperty(e,t,{get:function(){a.chainingBehavior.call(this);let o=function(){b(this,"lockSsfi")||b(this,"ssfi",o);let e=a.method.apply(this,arguments);if(void 0!==e)return e;let t=new ve;return X(this,t),t};if(ke(o,t,!0),qe){let e=Object.create(this);e.call=Me,e.apply=Pe,Object.setPrototypeOf(o,e)}else Object.getOwnPropertyNames(e).forEach(function(t){if(-1!==Te.indexOf(t))return;let n=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(o,t,n)});return X(this,o),Ee(o)},configurable:!0})}function Fe(e,t,o,n){let a=e.__methods[t],r=a.chainingBehavior;a.chainingBehavior=function(){let e=n(r).call(this);if(void 0!==e)return e;let t=new ve;return X(this,t),t};let s=a.method;a.method=function(){let e=o(s).apply(this,arguments);if(void 0!==e)return e;let t=new ve;return X(this,t),t}}function Ae(e,t){return G(e)<G(t)?-1:1}function Ce(e){return Object.keys(e).concat(function(e){return"function"!=typeof Object.getOwnPropertySymbols?[]:Object.getOwnPropertySymbols(e).filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})}(e))}const Be=Number.isNaN;function _e(e,t){let o=b(e,"operator"),n=b(e,"negate"),a=t[3],r=n?t[2]:t[1];if(o)return o;if("function"==typeof r&&(r=r()),r=r||"",!r)return;if(/\shave\s/.test(r))return;let s=function(e){let t=d(e);return-1!==["Array","Object","Function"].indexOf(t)}(a);return/\snot\s/.test(r)?s?"notDeepStrictEqual":"notStrictEqual":s?"deepStrictEqual":"strictEqual"}function Le(e){return e.name}function Ve(e){return"[object RegExp]"===Object.prototype.toString.call(e)}function Re(e){return["Number","BigInt"].includes(d(e))}const{Jt:Ke}=n;["to","be","been","is","and","has","have","with","that","which","at","of","same","but","does","still","also"].forEach(function(e){ve.addProperty(e)}),ve.addProperty("not",function(){Ke(this,"negate",!0)}),ve.addProperty("deep",function(){Ke(this,"deep",!0)}),ve.addProperty("nested",function(){Ke(this,"nested",!0)}),ve.addProperty("own",function(){Ke(this,"own",!0)}),ve.addProperty("ordered",function(){Ke(this,"ordered",!0)}),ve.addProperty("any",function(){Ke(this,"any",!0),Ke(this,"all",!1)}),ve.addProperty("all",function(){Ke(this,"all",!0),Ke(this,"any",!1)});const We={function:["function","asyncfunction","generatorfunction","asyncgeneratorfunction"],asyncfunction:["asyncfunction","asyncgeneratorfunction"],generatorfunction:["generatorfunction","asyncgeneratorfunction"],asyncgeneratorfunction:["asyncgeneratorfunction"]};function He(e,t){t&&Ke(this,"message",t),e=e.toLowerCase();let o=Ke(this,"object"),n=~["a","e","i","o","u"].indexOf(e.charAt(0))?"an ":"a ";const a=d(o).toLowerCase();We.function.includes(e)?this.assert(We[e].includes(a),"expected #{this} to be "+n+e,"expected #{this} not to be "+n+e):this.assert(e===a,"expected #{this} to be "+n+e,"expected #{this} not to be "+n+e)}function Ue(e,t){return Be(e)&&Be(t)||e===t}function Ye(){Ke(this,"contains",!0)}function Je(e,t){t&&Ke(this,"message",t);let o=Ke(this,"object"),n=d(o).toLowerCase(),a=Ke(this,"message"),r=Ke(this,"negate"),i=Ke(this,"ssfi"),l=Ke(this,"deep"),h=l?"deep ":"",b=l?Ke(this,"eql"):Ue;a=a?a+": ":"";let c=!1;switch(n){case"string":c=-1!==o.indexOf(e);break;case"weakset":if(l)throw new p(a+"unable to use .deep.include with WeakSet",void 0,i);c=o.has(e);break;case"map":o.forEach(function(t){c=c||b(t,e)});break;case"set":l?o.forEach(function(t){c=c||b(t,e)}):c=o.has(e);break;case"array":c=l?o.some(function(t){return b(t,e)}):-1!==o.indexOf(e);break;default:{if(e!==Object(e))throw new p(a+"the given combination of arguments ("+n+" and "+d(e).toLowerCase()+") is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a "+d(e).toLowerCase(),void 0,i);let t=Object.keys(e),l=null,h=0;if(t.forEach(function(n){let a=new ve(o);if(X(this,a,!0),Ke(a,"lockSsfi",!0),r&&1!==t.length)try{a.property(n,e[n])}catch(e){if(!s(e,p))throw e;null===l&&(l=e),h++}else a.property(n,e[n])},this),r&&t.length>1&&h===t.length)throw l;return}}this.assert(c,"expected #{this} to "+h+"include "+G(e),"expected #{this} to not "+h+"include "+G(e))}function Ge(){let e=Ke(this,"object");this.assert(null!=e,"expected #{this} to exist","expected #{this} to not exist")}function Ze(){let e=d(Ke(this,"object"));this.assert("Arguments"===e,"expected #{this} to be arguments but got "+e,"expected #{this} to not be arguments")}function Qe(e,t){t&&Ke(this,"message",t);let o=Ke(this,"object");if(Ke(this,"deep")){let t=Ke(this,"lockSsfi");Ke(this,"lockSsfi",!0),this.eql(e),Ke(this,"lockSsfi",t)}else this.assert(e===o,"expected #{this} to equal #{exp}","expected #{this} to not equal #{exp}",e,this._obj,!0)}function Xe(e,t){t&&Ke(this,"message",t);let o=Ke(this,"eql");this.assert(o(e,Ke(this,"object")),"expected #{this} to deeply equal #{exp}","expected #{this} to not deeply equal #{exp}",e,this._obj,!0)}function et(e,t){t&&Ke(this,"message",t);let o=Ke(this,"object"),n=Ke(this,"doLength"),a=Ke(this,"message"),r=a?a+": ":"",s=Ke(this,"ssfi"),i=d(o).toLowerCase(),l=d(e).toLowerCase();if(n&&"map"!==i&&"set"!==i&&new ve(o,a,s,!0).to.have.property("length"),!n&&"date"===i&&"date"!==l)throw new p(r+"the argument to above must be a date",void 0,s);if(!Re(e)&&(n||Re(o)))throw new p(r+"the argument to above must be a number",void 0,s);if(!n&&"date"!==i&&!Re(o))throw new p(r+"expected "+("string"===i?"'"+o+"'":o)+" to be a number or a date",void 0,s);if(n){let t,n="length";"map"===i||"set"===i?(n="size",t=o.size):t=o.length,this.assert(t>e,"expected #{this} to have a "+n+" above #{exp} but got #{act}","expected #{this} to not have a "+n+" above #{exp}",e,t)}else this.assert(o>e,"expected #{this} to be above #{exp}","expected #{this} to be at most #{exp}",e)}function tt(e,t){t&&Ke(this,"message",t);let o,n=Ke(this,"object"),a=Ke(this,"doLength"),r=Ke(this,"message"),s=r?r+": ":"",i=Ke(this,"ssfi"),l=d(n).toLowerCase(),h=d(e).toLowerCase(),b=!0;if(a&&"map"!==l&&"set"!==l&&new ve(n,r,i,!0).to.have.property("length"),a||"date"!==l||"date"===h?Re(e)||!a&&!Re(n)?a||"date"===l||Re(n)?b=!1:o=s+"expected "+("string"===l?"'"+n+"'":n)+" to be a number or a date":o=s+"the argument to least must be a number":o=s+"the argument to least must be a date",b)throw new p(o,void 0,i);if(a){let t,o="length";"map"===l||"set"===l?(o="size",t=n.size):t=n.length,this.assert(t>=e,"expected #{this} to have a "+o+" at least #{exp} but got #{act}","expected #{this} to have a "+o+" below #{exp}",e,t)}else this.assert(n>=e,"expected #{this} to be at least #{exp}","expected #{this} to be below #{exp}",e)}function ot(e,t){t&&Ke(this,"message",t);let o,n=Ke(this,"object"),a=Ke(this,"doLength"),r=Ke(this,"message"),s=r?r+": ":"",i=Ke(this,"ssfi"),l=d(n).toLowerCase(),h=d(e).toLowerCase(),b=!0;if(a&&"map"!==l&&"set"!==l&&new ve(n,r,i,!0).to.have.property("length"),a||"date"!==l||"date"===h?Re(e)||!a&&!Re(n)?a||"date"===l||Re(n)?b=!1:o=s+"expected "+("string"===l?"'"+n+"'":n)+" to be a number or a date":o=s+"the argument to below must be a number":o=s+"the argument to below must be a date",b)throw new p(o,void 0,i);if(a){let t,o="length";"map"===l||"set"===l?(o="size",t=n.size):t=n.length,this.assert(t<e,"expected #{this} to have a "+o+" below #{exp} but got #{act}","expected #{this} to not have a "+o+" below #{exp}",e,t)}else this.assert(n<e,"expected #{this} to be below #{exp}","expected #{this} to be at least #{exp}",e)}function nt(e,t){t&&Ke(this,"message",t);let o,n=Ke(this,"object"),a=Ke(this,"doLength"),r=Ke(this,"message"),s=r?r+": ":"",i=Ke(this,"ssfi"),l=d(n).toLowerCase(),h=d(e).toLowerCase(),b=!0;if(a&&"map"!==l&&"set"!==l&&new ve(n,r,i,!0).to.have.property("length"),a||"date"!==l||"date"===h?Re(e)||!a&&!Re(n)?a||"date"===l||Re(n)?b=!1:o=s+"expected "+("string"===l?"'"+n+"'":n)+" to be a number or a date":o=s+"the argument to most must be a number":o=s+"the argument to most must be a date",b)throw new p(o,void 0,i);if(a){let t,o="length";"map"===l||"set"===l?(o="size",t=n.size):t=n.length,this.assert(t<=e,"expected #{this} to have a "+o+" at most #{exp} but got #{act}","expected #{this} to have a "+o+" above #{exp}",e,t)}else this.assert(n<=e,"expected #{this} to be at most #{exp}","expected #{this} to be above #{exp}",e)}function at(e,t){t&&Ke(this,"message",t);let o,n=Ke(this,"object"),a=Ke(this,"ssfi"),r=Ke(this,"message");try{o=n instanceof e}catch(t){if(t instanceof TypeError)throw r=r?r+": ":"",new p(r+"The instanceof assertion needs a constructor but "+d(e)+" was given.",void 0,a);throw t}let s=Le(e);null==s&&(s="an unnamed constructor"),this.assert(o,"expected #{this} to be an instance of "+s,"expected #{this} to not be an instance of "+s)}function rt(e,t,o){o&&Ke(this,"message",o);let n=Ke(this,"nested"),a=Ke(this,"own"),r=Ke(this,"message"),s=Ke(this,"object"),i=Ke(this,"ssfi"),l=typeof e;if(r=r?r+": ":"",n){if("string"!==l)throw new p(r+"the argument to property must be a string when using nested syntax",void 0,i)}else if("string"!==l&&"number"!==l&&"symbol"!==l)throw new p(r+"the argument to property must be a string, number, or symbol",void 0,i);if(n&&a)throw new p(r+'The "nested" and "own" flags cannot be combined.',void 0,i);if(null==s)throw new p(r+"Target cannot be null or undefined.",void 0,i);let h,b=Ke(this,"deep"),c=Ke(this,"negate"),d=n?ge(s,e):null,u=n?d.value:s[e],f=b?Ke(this,"eql"):(e,t)=>e===t,w="";b&&(w+="deep "),a&&(w+="own "),n&&(w+="nested "),w+="property ",h=a?Object.prototype.hasOwnProperty.call(s,e):n?d.exists:me(s,e),c&&1!==arguments.length||this.assert(h,"expected #{this} to have "+w+G(e),"expected #{this} to not have "+w+G(e)),arguments.length>1&&this.assert(h&&f(t,u),"expected #{this} to have "+w+G(e)+" of #{exp}, but got #{act}","expected #{this} to not have "+w+G(e)+" of #{act}",t,u),Ke(this,"object",u)}function st(e,t,o){Ke(this,"own",!0),rt.apply(this,arguments)}function it(e,t,o){"string"==typeof t&&(o=t,t=null),o&&Ke(this,"message",o);let n=Ke(this,"object"),a=Object.getOwnPropertyDescriptor(Object(n),e),r=Ke(this,"eql");a&&t?this.assert(r(t,a),"expected the own property descriptor for "+G(e)+" on #{this} to match "+G(t)+", got "+G(a),"expected the own property descriptor for "+G(e)+" on #{this} to not match "+G(t),t,a,!0):this.assert(a,"expected #{this} to have an own property descriptor for "+G(e),"expected #{this} to not have an own property descriptor for "+G(e)),Ke(this,"object",a)}function lt(){Ke(this,"doLength",!0)}function ht(e,t){t&&Ke(this,"message",t);let o,n=Ke(this,"object"),a=d(n).toLowerCase(),r=Ke(this,"message"),s=Ke(this,"ssfi"),i="length";switch(a){case"map":case"set":i="size",o=n.size;break;default:new ve(n,r,s,!0).to.have.property("length"),o=n.length}this.assert(o==e,"expected #{this} to have a "+i+" of #{exp} but got #{act}","expected #{this} to not have a "+i+" of #{act}",e,o)}function bt(e,t){t&&Ke(this,"message",t);let o=Ke(this,"object");this.assert(e.exec(o),"expected #{this} to match "+e,"expected #{this} not to match "+e)}function ct(e){let t,o,n=Ke(this,"object"),a=d(n),r=d(e),s=Ke(this,"ssfi"),i=Ke(this,"deep"),l="",h=!0,b=Ke(this,"message");b=b?b+": ":"";let c=b+"when testing keys against an object or an array you must give a single Array|Object|String argument or multiple String arguments";if("Map"===a||"Set"===a)l=i?"deeply ":"",o=[],n.forEach(function(e,t){o.push(t)}),"Array"!==r&&(e=Array.prototype.slice.call(arguments));else{switch(o=Ce(n),r){case"Array":if(arguments.length>1)throw new p(c,void 0,s);break;case"Object":if(arguments.length>1)throw new p(c,void 0,s);e=Object.keys(e);break;default:e=Array.prototype.slice.call(arguments)}e=e.map(function(e){return"symbol"==typeof e?e:String(e)})}if(!e.length)throw new p(b+"keys required",void 0,s);let u=e.length,f=Ke(this,"any"),w=Ke(this,"all"),m=e,y=i?Ke(this,"eql"):(e,t)=>e===t;if(f||w||(w=!0),f&&(h=m.some(function(e){return o.some(function(t){return y(e,t)})})),w&&(h=m.every(function(e){return o.some(function(t){return y(e,t)})}),Ke(this,"contains")||(h=h&&e.length==o.length)),u>1){let o=(e=e.map(function(e){return G(e)})).pop();w&&(t=e.join(", ")+", and "+o),f&&(t=e.join(", ")+", or "+o)}else t=G(e[0]);t=(u>1?"keys ":"key ")+t,t=(Ke(this,"contains")?"contain ":"have ")+t,this.assert(h,"expected #{this} to "+l+t,"expected #{this} to not "+l+t,m.slice(0).sort(Ae),o.sort(Ae),!0)}function dt(e,t,o){o&&Ke(this,"message",o);let n,a=Ke(this,"object"),b=Ke(this,"ssfi"),c=Ke(this,"message"),d=Ke(this,"negate")||!1;new ve(a,c,b,!0).is.a("function"),(Ve(e)||"string"==typeof e)&&(t=e,e=null);let u=!1;try{a()}catch(e){u=!0,n=e}let p=void 0===e&&void 0===t,f=Boolean(e&&t),w=!1,m=!1;if(p||!p&&!d){let t="an error";e instanceof Error?t="#{exp}":e&&(t=l(e));let o=n;if(n instanceof Error)o=n.toString();else if("string"==typeof n)o=n;else if(n&&("object"==typeof n||"function"==typeof n))try{o=l(n)}catch(e){}this.assert(u,"expected #{this} to throw "+t,"expected #{this} to not throw an error but #{act} was thrown",e&&e.toString(),o)}if(e&&n&&(e instanceof Error&&r(n,e)===d&&(f&&d?w=!0:this.assert(d,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}"+(n&&!d?" but #{act} was thrown":""),e.toString(),n.toString())),s(n,e)===d&&(f&&d?w=!0:this.assert(d,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}"+(n?" but #{act} was thrown":""),e instanceof Error?e.toString():e&&l(e),n instanceof Error?n.toString():n&&l(n)))),n&&null!=t){let e="including";Ve(t)&&(e="matching"),i(n,t)===d&&(f&&d?m=!0:this.assert(d,"expected #{this} to throw error "+e+" #{exp} but got #{act}","expected #{this} to throw error not "+e+" #{exp}",t,h(n)))}w&&m&&this.assert(d,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}"+(n?" but #{act} was thrown":""),e instanceof Error?e.toString():e&&l(e),n instanceof Error?n.toString():n&&l(n)),Ke(this,"object",n)}function ut(e,t){t&&Ke(this,"message",t);let o=Ke(this,"object"),n=Ke(this,"itself"),a="function"!=typeof o||n?o[e]:o.prototype[e];this.assert("function"==typeof a,"expected #{this} to respond to "+G(e),"expected #{this} to not respond to "+G(e))}function pt(e,t){t&&Ke(this,"message",t);let o=e(Ke(this,"object"));this.assert(o,"expected #{this} to satisfy "+Z(e),"expected #{this} to not satisfy"+Z(e),!Ke(this,"negate"),o)}function ft(e,t,o){o&&Ke(this,"message",o);let n=Ke(this,"object"),a=Ke(this,"message"),r=Ke(this,"ssfi");new ve(n,a,r,!0).is.numeric;let s="A `delta` value is required for `closeTo`";if(null==t)throw new p(a?`${a}: ${s}`:s,void 0,r);if(new ve(t,a,r,!0).is.numeric,s="A `expected` value is required for `closeTo`",null==e)throw new p(a?`${a}: ${s}`:s,void 0,r);var i;new ve(e,a,r,!0).is.numeric,this.assert((i=n-e,parseFloat(parseFloat(i<0n?-i:i).toPrecision(12))<=t),"expected #{this} to be close to "+e+" +/- "+t,"expected #{this} not to be close to "+e+" +/- "+t)}function wt(e,t,o){o&&Ke(this,"message",o);let n,a=Ke(this,"object"),r=Ke(this,"message"),s=Ke(this,"ssfi");new ve(a,r,s,!0).is.a("function"),t?(new ve(e,r,s,!0).to.have.property(t),n=e[t]):(new ve(e,r,s,!0).is.a("function"),n=e()),a();let i=null==t?e():e[t],l=null==t?n:"."+t;Ke(this,"deltaMsgObj",l),Ke(this,"initialDeltaValue",n),Ke(this,"finalDeltaValue",i),Ke(this,"deltaBehavior","change"),Ke(this,"realDelta",i!==n),this.assert(n!==i,"expected "+l+" to change","expected "+l+" to not change")}function mt(e,t,o){o&&Ke(this,"message",o);let n,a=Ke(this,"object"),r=Ke(this,"message"),s=Ke(this,"ssfi");new ve(a,r,s,!0).is.a("function"),t?(new ve(e,r,s,!0).to.have.property(t),n=e[t]):(new ve(e,r,s,!0).is.a("function"),n=e()),new ve(n,r,s,!0).is.a("number"),a();let i=null==t?e():e[t],l=null==t?n:"."+t;Ke(this,"deltaMsgObj",l),Ke(this,"initialDeltaValue",n),Ke(this,"finalDeltaValue",i),Ke(this,"deltaBehavior","increase"),Ke(this,"realDelta",i-n),this.assert(i-n>0,"expected "+l+" to increase","expected "+l+" to not increase")}function yt(e,t,o){o&&Ke(this,"message",o);let n,a=Ke(this,"object"),r=Ke(this,"message"),s=Ke(this,"ssfi");new ve(a,r,s,!0).is.a("function"),t?(new ve(e,r,s,!0).to.have.property(t),n=e[t]):(new ve(e,r,s,!0).is.a("function"),n=e()),new ve(n,r,s,!0).is.a("number"),a();let i=null==t?e():e[t],l=null==t?n:"."+t;Ke(this,"deltaMsgObj",l),Ke(this,"initialDeltaValue",n),Ke(this,"finalDeltaValue",i),Ke(this,"deltaBehavior","decrease"),Ke(this,"realDelta",n-i),this.assert(i-n<0,"expected "+l+" to decrease","expected "+l+" to not decrease")}function gt(e,t){return e===t||typeof t==typeof e&&("object"!=typeof e||null===e?e===t:!!t&&(Array.isArray(e)?!!Array.isArray(t)&&e.every(function(e){return t.some(function(t){return gt(e,t)})}):e instanceof Date?t instanceof Date&&e.getTime()===t.getTime():Object.keys(e).every(function(o){let n=e[o],a=t[o];return"object"==typeof n&&null!==n&&null!==a?gt(n,a):"function"==typeof n?n(a):a===n})))}function vt(e,t){return new ve(e,t)}function xt(e,t){new ve(null,null,xt,!0).assert(e,t,"[ negation message unavailable ]")}ve.addChainableMethod("an",He),ve.addChainableMethod("a",He),ve.addChainableMethod("include",Je,Ye),ve.addChainableMethod("contain",Je,Ye),ve.addChainableMethod("contains",Je,Ye),ve.addChainableMethod("includes",Je,Ye),ve.addProperty("ok",function(){this.assert(Ke(this,"object"),"expected #{this} to be truthy","expected #{this} to be falsy")}),ve.addProperty("true",function(){this.assert(!0===Ke(this,"object"),"expected #{this} to be true","expected #{this} to be false",!Ke(this,"negate"))}),ve.addProperty("numeric",function(){const e=Ke(this,"object");this.assert(["Number","BigInt"].includes(d(e)),"expected #{this} to be numeric","expected #{this} to not be numeric",!Ke(this,"negate"))}),ve.addProperty("callable",function(){const e=Ke(this,"object"),t=Ke(this,"ssfi"),o=Ke(this,"message"),n=o?`${o}: `:"",a=Ke(this,"negate"),r=a?`${n}expected ${G(e)} not to be a callable function`:`${n}expected ${G(e)} to be a callable function`,s=["Function","AsyncFunction","GeneratorFunction","AsyncGeneratorFunction"].includes(d(e));if(s&&a||!s&&!a)throw new p(r,void 0,t)}),ve.addProperty("false",function(){this.assert(!1===Ke(this,"object"),"expected #{this} to be false","expected #{this} to be true",!!Ke(this,"negate"))}),ve.addProperty("null",function(){this.assert(null===Ke(this,"object"),"expected #{this} to be null","expected #{this} not to be null")}),ve.addProperty("undefined",function(){this.assert(void 0===Ke(this,"object"),"expected #{this} to be undefined","expected #{this} not to be undefined")}),ve.addProperty("NaN",function(){this.assert(Be(Ke(this,"object")),"expected #{this} to be NaN","expected #{this} not to be NaN")}),ve.addProperty("exist",Ge),ve.addProperty("exists",Ge),ve.addProperty("empty",function(){let e,t=Ke(this,"object"),o=Ke(this,"ssfi"),n=Ke(this,"message");switch(n=n?n+": ":"",d(t).toLowerCase()){case"array":case"string":e=t.length;break;case"map":case"set":e=t.size;break;case"weakmap":case"weakset":throw new p(n+".empty was passed a weak collection",void 0,o);case"function":{const e=n+".empty was passed a function "+Le(t);throw new p(e.trim(),void 0,o)}default:if(t!==Object(t))throw new p(n+".empty was passed non-string primitive "+G(t),void 0,o);e=Object.keys(t).length}this.assert(0===e,"expected #{this} to be empty","expected #{this} not to be empty")}),ve.addProperty("arguments",Ze),ve.addProperty("Arguments",Ze),ve.addMethod("equal",Qe),ve.addMethod("equals",Qe),ve.addMethod("eq",Qe),ve.addMethod("eql",Xe),ve.addMethod("eqls",Xe),ve.addMethod("above",et),ve.addMethod("gt",et),ve.addMethod("greaterThan",et),ve.addMethod("least",tt),ve.addMethod("gte",tt),ve.addMethod("greaterThanOrEqual",tt),ve.addMethod("below",ot),ve.addMethod("lt",ot),ve.addMethod("lessThan",ot),ve.addMethod("most",nt),ve.addMethod("lte",nt),ve.addMethod("lessThanOrEqual",nt),ve.addMethod("within",function(e,t,o){o&&Ke(this,"message",o);let n,a=Ke(this,"object"),r=Ke(this,"doLength"),s=Ke(this,"message"),i=s?s+": ":"",l=Ke(this,"ssfi"),h=d(a).toLowerCase(),b=d(e).toLowerCase(),c=d(t).toLowerCase(),u=!0,f="date"===b&&"date"===c?e.toISOString()+".."+t.toISOString():e+".."+t;if(r&&"map"!==h&&"set"!==h&&new ve(a,s,l,!0).to.have.property("length"),r||"date"!==h||"date"===b&&"date"===c?Re(e)&&Re(t)||!r&&!Re(a)?r||"date"===h||Re(a)?u=!1:n=i+"expected "+("string"===h?"'"+a+"'":a)+" to be a number or a date":n=i+"the arguments to within must be numbers":n=i+"the arguments to within must be dates",u)throw new p(n,void 0,l);if(r){let o,n="length";"map"===h||"set"===h?(n="size",o=a.size):o=a.length,this.assert(o>=e&&o<=t,"expected #{this} to have a "+n+" within "+f,"expected #{this} to not have a "+n+" within "+f)}else this.assert(a>=e&&a<=t,"expected #{this} to be within "+f,"expected #{this} to not be within "+f)}),ve.addMethod("instanceof",at),ve.addMethod("instanceOf",at),ve.addMethod("property",rt),ve.addMethod("ownProperty",st),ve.addMethod("haveOwnProperty",st),ve.addMethod("ownPropertyDescriptor",it),ve.addMethod("haveOwnPropertyDescriptor",it),ve.addChainableMethod("length",ht,lt),ve.addChainableMethod("lengthOf",ht,lt),ve.addMethod("match",bt),ve.addMethod("matches",bt),ve.addMethod("string",function(e,t){t&&Ke(this,"message",t);let o=Ke(this,"object"),n=Ke(this,"message"),a=Ke(this,"ssfi");new ve(o,n,a,!0).is.a("string"),this.assert(~o.indexOf(e),"expected #{this} to contain "+G(e),"expected #{this} to not contain "+G(e))}),ve.addMethod("keys",ct),ve.addMethod("key",ct),ve.addMethod("throw",dt),ve.addMethod("throws",dt),ve.addMethod("Throw",dt),ve.addMethod("respondTo",ut),ve.addMethod("respondsTo",ut),ve.addProperty("itself",function(){Ke(this,"itself",!0)}),ve.addMethod("satisfy",pt),ve.addMethod("satisfies",pt),ve.addMethod("closeTo",ft),ve.addMethod("approximately",ft),ve.addMethod("members",function(e,t){t&&Ke(this,"message",t);let o=Ke(this,"object"),n=Ke(this,"message"),a=Ke(this,"ssfi");new ve(o,n,a,!0).to.be.iterable,new ve(e,n,a,!0).to.be.iterable;let r,s,i,l=Ke(this,"contains"),h=Ke(this,"ordered");l?(r=h?"an ordered superset":"a superset",s="expected #{this} to be "+r+" of #{exp}",i="expected #{this} to not be "+r+" of #{exp}"):(r=h?"ordered members":"members",s="expected #{this} to have the same "+r+" as #{exp}",i="expected #{this} to not have the same "+r+" as #{exp}");let b=Ke(this,"deep")?Ke(this,"eql"):void 0;this.assert(function(e,t,o,n,a){let r=Array.from(t),s=Array.from(e);if(!n){if(s.length!==r.length)return!1;r=r.slice()}return s.every(function(e,t){if(a)return o?o(e,r[t]):e===r[t];if(!o){let t=r.indexOf(e);return-1!==t&&(n||r.splice(t,1),!0)}return r.some(function(t,a){return!!o(e,t)&&(n||r.splice(a,1),!0)})})}(e,o,b,l,h),s,i,e,o,!0)}),ve.addProperty("iterable",function(e){e&&Ke(this,"message",e);let t=Ke(this,"object");this.assert(null!=t&&t[Symbol.iterator],"expected #{this} to be an iterable","expected #{this} to not be an iterable",t)}),ve.addMethod("oneOf",function(e,t){t&&Ke(this,"message",t);let o=Ke(this,"object"),n=Ke(this,"message"),a=Ke(this,"ssfi"),r=Ke(this,"contains"),s=Ke(this,"deep"),i=Ke(this,"eql");new ve(e,n,a,!0).to.be.an("array"),r?this.assert(e.some(function(e){return o.indexOf(e)>-1}),"expected #{this} to contain one of #{exp}","expected #{this} to not contain one of #{exp}",e,o):s?this.assert(e.some(function(e){return i(o,e)}),"expected #{this} to deeply equal one of #{exp}","expected #{this} to deeply equal one of #{exp}",e,o):this.assert(e.indexOf(o)>-1,"expected #{this} to be one of #{exp}","expected #{this} to not be one of #{exp}",e,o)}),ve.addMethod("change",wt),ve.addMethod("changes",wt),ve.addMethod("increase",mt),ve.addMethod("increases",mt),ve.addMethod("decrease",yt),ve.addMethod("decreases",yt),ve.addMethod("by",function(e,t){t&&Ke(this,"message",t);let o,n=Ke(this,"deltaMsgObj"),a=Ke(this,"initialDeltaValue"),r=Ke(this,"finalDeltaValue"),s=Ke(this,"deltaBehavior"),i=Ke(this,"realDelta");o="change"===s?Math.abs(r-a)===Math.abs(e):i===Math.abs(e),this.assert(o,"expected "+n+" to "+s+" by "+e,"expected "+n+" to not "+s+" by "+e)}),ve.addProperty("extensible",function(){let e=Ke(this,"object"),t=e===Object(e)&&Object.isExtensible(e);this.assert(t,"expected #{this} to be extensible","expected #{this} to not be extensible")}),ve.addProperty("sealed",function(){let e=Ke(this,"object"),t=e!==Object(e)||Object.isSealed(e);this.assert(t,"expected #{this} to be sealed","expected #{this} to not be sealed")}),ve.addProperty("frozen",function(){let e=Ke(this,"object"),t=e!==Object(e)||Object.isFrozen(e);this.assert(t,"expected #{this} to be frozen","expected #{this} to not be frozen")}),ve.addProperty("finite",function(e){let t=Ke(this,"object");this.assert("number"==typeof t&&isFinite(t),"expected #{this} to be a finite number","expected #{this} to not be a finite number")}),ve.addMethod("containSubset",function(e){const t=b(this,"object"),o=J.showDiff;this.assert(gt(e,t),"expected #{act} to contain subset #{exp}","expected #{act} to not contain subset #{exp}",e,t,o)}),vt.fail=function(e,t,o,n){throw arguments.length<2&&(o=e,e=void 0),new p(o=o||"expect.fail()",{actual:e,expected:t,operator:n},vt.fail)},xt.fail=function(e,t,o,n){throw arguments.length<2&&(o=e,e=void 0),new p(o=o||"assert.fail()",{actual:e,expected:t,operator:n},xt.fail)},xt.isOk=function(e,t){new ve(e,t,xt.isOk,!0).is.ok},xt.isNotOk=function(e,t){new ve(e,t,xt.isNotOk,!0).is.not.ok},xt.equal=function(e,t,o){let n=new ve(e,o,xt.equal,!0);n.assert(t==b(n,"object"),"expected #{this} to equal #{exp}","expected #{this} to not equal #{act}",t,e,!0)},xt.notEqual=function(e,t,o){let n=new ve(e,o,xt.notEqual,!0);n.assert(t!=b(n,"object"),"expected #{this} to not equal #{exp}","expected #{this} to equal #{act}",t,e,!0)},xt.strictEqual=function(e,t,o){new ve(e,o,xt.strictEqual,!0).to.equal(t)},xt.notStrictEqual=function(e,t,o){new ve(e,o,xt.notStrictEqual,!0).to.not.equal(t)},xt.deepEqual=xt.deepStrictEqual=function(e,t,o){new ve(e,o,xt.deepEqual,!0).to.eql(t)},xt.notDeepEqual=function(e,t,o){new ve(e,o,xt.notDeepEqual,!0).to.not.eql(t)},xt.isAbove=function(e,t,o){new ve(e,o,xt.isAbove,!0).to.be.above(t)},xt.isAtLeast=function(e,t,o){new ve(e,o,xt.isAtLeast,!0).to.be.least(t)},xt.isBelow=function(e,t,o){new ve(e,o,xt.isBelow,!0).to.be.below(t)},xt.isAtMost=function(e,t,o){new ve(e,o,xt.isAtMost,!0).to.be.most(t)},xt.isTrue=function(e,t){new ve(e,t,xt.isTrue,!0).is.true},xt.isNotTrue=function(e,t){new ve(e,t,xt.isNotTrue,!0).to.not.equal(!0)},xt.isFalse=function(e,t){new ve(e,t,xt.isFalse,!0).is.false},xt.isNotFalse=function(e,t){new ve(e,t,xt.isNotFalse,!0).to.not.equal(!1)},xt.isNull=function(e,t){new ve(e,t,xt.isNull,!0).to.equal(null)},xt.isNotNull=function(e,t){new ve(e,t,xt.isNotNull,!0).to.not.equal(null)},xt.isNaN=function(e,t){new ve(e,t,xt.isNaN,!0).to.be.NaN},xt.isNotNaN=function(e,t){new ve(e,t,xt.isNotNaN,!0).not.to.be.NaN},xt.exists=function(e,t){new ve(e,t,xt.exists,!0).to.exist},xt.notExists=function(e,t){new ve(e,t,xt.notExists,!0).to.not.exist},xt.isUndefined=function(e,t){new ve(e,t,xt.isUndefined,!0).to.equal(void 0)},xt.isDefined=function(e,t){new ve(e,t,xt.isDefined,!0).to.not.equal(void 0)},xt.isCallable=function(e,t){new ve(e,t,xt.isCallable,!0).is.callable},xt.isNotCallable=function(e,t){new ve(e,t,xt.isNotCallable,!0).is.not.callable},xt.isObject=function(e,t){new ve(e,t,xt.isObject,!0).to.be.a("object")},xt.isNotObject=function(e,t){new ve(e,t,xt.isNotObject,!0).to.not.be.a("object")},xt.isArray=function(e,t){new ve(e,t,xt.isArray,!0).to.be.an("array")},xt.isNotArray=function(e,t){new ve(e,t,xt.isNotArray,!0).to.not.be.an("array")},xt.isString=function(e,t){new ve(e,t,xt.isString,!0).to.be.a("string")},xt.isNotString=function(e,t){new ve(e,t,xt.isNotString,!0).to.not.be.a("string")},xt.isNumber=function(e,t){new ve(e,t,xt.isNumber,!0).to.be.a("number")},xt.isNotNumber=function(e,t){new ve(e,t,xt.isNotNumber,!0).to.not.be.a("number")},xt.isNumeric=function(e,t){new ve(e,t,xt.isNumeric,!0).is.numeric},xt.isNotNumeric=function(e,t){new ve(e,t,xt.isNotNumeric,!0).is.not.numeric},xt.isFinite=function(e,t){new ve(e,t,xt.isFinite,!0).to.be.finite},xt.isBoolean=function(e,t){new ve(e,t,xt.isBoolean,!0).to.be.a("boolean")},xt.isNotBoolean=function(e,t){new ve(e,t,xt.isNotBoolean,!0).to.not.be.a("boolean")},xt.typeOf=function(e,t,o){new ve(e,o,xt.typeOf,!0).to.be.a(t)},xt.notTypeOf=function(e,t,o){new ve(e,o,xt.notTypeOf,!0).to.not.be.a(t)},xt.instanceOf=function(e,t,o){new ve(e,o,xt.instanceOf,!0).to.be.instanceOf(t)},xt.notInstanceOf=function(e,t,o){new ve(e,o,xt.notInstanceOf,!0).to.not.be.instanceOf(t)},xt.include=function(e,t,o){new ve(e,o,xt.include,!0).include(t)},xt.notInclude=function(e,t,o){new ve(e,o,xt.notInclude,!0).not.include(t)},xt.deepInclude=function(e,t,o){new ve(e,o,xt.deepInclude,!0).deep.include(t)},xt.notDeepInclude=function(e,t,o){new ve(e,o,xt.notDeepInclude,!0).not.deep.include(t)},xt.nestedInclude=function(e,t,o){new ve(e,o,xt.nestedInclude,!0).nested.include(t)},xt.notNestedInclude=function(e,t,o){new ve(e,o,xt.notNestedInclude,!0).not.nested.include(t)},xt.deepNestedInclude=function(e,t,o){new ve(e,o,xt.deepNestedInclude,!0).deep.nested.include(t)},xt.notDeepNestedInclude=function(e,t,o){new ve(e,o,xt.notDeepNestedInclude,!0).not.deep.nested.include(t)},xt.ownInclude=function(e,t,o){new ve(e,o,xt.ownInclude,!0).own.include(t)},xt.notOwnInclude=function(e,t,o){new ve(e,o,xt.notOwnInclude,!0).not.own.include(t)},xt.deepOwnInclude=function(e,t,o){new ve(e,o,xt.deepOwnInclude,!0).deep.own.include(t)},xt.notDeepOwnInclude=function(e,t,o){new ve(e,o,xt.notDeepOwnInclude,!0).not.deep.own.include(t)},xt.match=function(e,t,o){new ve(e,o,xt.match,!0).to.match(t)},xt.notMatch=function(e,t,o){new ve(e,o,xt.notMatch,!0).to.not.match(t)},xt.property=function(e,t,o){new ve(e,o,xt.property,!0).to.have.property(t)},xt.notProperty=function(e,t,o){new ve(e,o,xt.notProperty,!0).to.not.have.property(t)},xt.propertyVal=function(e,t,o,n){new ve(e,n,xt.propertyVal,!0).to.have.property(t,o)},xt.notPropertyVal=function(e,t,o,n){new ve(e,n,xt.notPropertyVal,!0).to.not.have.property(t,o)},xt.deepPropertyVal=function(e,t,o,n){new ve(e,n,xt.deepPropertyVal,!0).to.have.deep.property(t,o)},xt.notDeepPropertyVal=function(e,t,o,n){new ve(e,n,xt.notDeepPropertyVal,!0).to.not.have.deep.property(t,o)},xt.ownProperty=function(e,t,o){new ve(e,o,xt.ownProperty,!0).to.have.own.property(t)},xt.notOwnProperty=function(e,t,o){new ve(e,o,xt.notOwnProperty,!0).to.not.have.own.property(t)},xt.ownPropertyVal=function(e,t,o,n){new ve(e,n,xt.ownPropertyVal,!0).to.have.own.property(t,o)},xt.notOwnPropertyVal=function(e,t,o,n){new ve(e,n,xt.notOwnPropertyVal,!0).to.not.have.own.property(t,o)},xt.deepOwnPropertyVal=function(e,t,o,n){new ve(e,n,xt.deepOwnPropertyVal,!0).to.have.deep.own.property(t,o)},xt.notDeepOwnPropertyVal=function(e,t,o,n){new ve(e,n,xt.notDeepOwnPropertyVal,!0).to.not.have.deep.own.property(t,o)},xt.nestedProperty=function(e,t,o){new ve(e,o,xt.nestedProperty,!0).to.have.nested.property(t)},xt.notNestedProperty=function(e,t,o){new ve(e,o,xt.notNestedProperty,!0).to.not.have.nested.property(t)},xt.nestedPropertyVal=function(e,t,o,n){new ve(e,n,xt.nestedPropertyVal,!0).to.have.nested.property(t,o)},xt.notNestedPropertyVal=function(e,t,o,n){new ve(e,n,xt.notNestedPropertyVal,!0).to.not.have.nested.property(t,o)},xt.deepNestedPropertyVal=function(e,t,o,n){new ve(e,n,xt.deepNestedPropertyVal,!0).to.have.deep.nested.property(t,o)},xt.notDeepNestedPropertyVal=function(e,t,o,n){new ve(e,n,xt.notDeepNestedPropertyVal,!0).to.not.have.deep.nested.property(t,o)},xt.lengthOf=function(e,t,o){new ve(e,o,xt.lengthOf,!0).to.have.lengthOf(t)},xt.hasAnyKeys=function(e,t,o){new ve(e,o,xt.hasAnyKeys,!0).to.have.any.keys(t)},xt.hasAllKeys=function(e,t,o){new ve(e,o,xt.hasAllKeys,!0).to.have.all.keys(t)},xt.containsAllKeys=function(e,t,o){new ve(e,o,xt.containsAllKeys,!0).to.contain.all.keys(t)},xt.doesNotHaveAnyKeys=function(e,t,o){new ve(e,o,xt.doesNotHaveAnyKeys,!0).to.not.have.any.keys(t)},xt.doesNotHaveAllKeys=function(e,t,o){new ve(e,o,xt.doesNotHaveAllKeys,!0).to.not.have.all.keys(t)},xt.hasAnyDeepKeys=function(e,t,o){new ve(e,o,xt.hasAnyDeepKeys,!0).to.have.any.deep.keys(t)},xt.hasAllDeepKeys=function(e,t,o){new ve(e,o,xt.hasAllDeepKeys,!0).to.have.all.deep.keys(t)},xt.containsAllDeepKeys=function(e,t,o){new ve(e,o,xt.containsAllDeepKeys,!0).to.contain.all.deep.keys(t)},xt.doesNotHaveAnyDeepKeys=function(e,t,o){new ve(e,o,xt.doesNotHaveAnyDeepKeys,!0).to.not.have.any.deep.keys(t)},xt.doesNotHaveAllDeepKeys=function(e,t,o){new ve(e,o,xt.doesNotHaveAllDeepKeys,!0).to.not.have.all.deep.keys(t)},xt.throws=function(e,t,o,n){return("string"==typeof t||t instanceof RegExp)&&(o=t,t=null),b(new ve(e,n,xt.throws,!0).to.throw(t,o),"object")},xt.doesNotThrow=function(e,t,o,n){("string"==typeof t||t instanceof RegExp)&&(o=t,t=null),new ve(e,n,xt.doesNotThrow,!0).to.not.throw(t,o)},xt.operator=function(e,t,o,n){let a;switch(t){case"==":a=e==o;break;case"===":a=e===o;break;case">":a=e>o;break;case">=":a=e>=o;break;case"<":a=e<o;break;case"<=":a=e<=o;break;case"!=":a=e!=o;break;case"!==":a=e!==o;break;default:throw new p((n=n?n+": ":n)+'Invalid operator "'+t+'"',void 0,xt.operator)}let r=new ve(a,n,xt.operator,!0);r.assert(!0===b(r,"object"),"expected "+G(e)+" to be "+t+" "+G(o),"expected "+G(e)+" to not be "+t+" "+G(o))},xt.closeTo=function(e,t,o,n){new ve(e,n,xt.closeTo,!0).to.be.closeTo(t,o)},xt.approximately=function(e,t,o,n){new ve(e,n,xt.approximately,!0).to.be.approximately(t,o)},xt.sameMembers=function(e,t,o){new ve(e,o,xt.sameMembers,!0).to.have.same.members(t)},xt.notSameMembers=function(e,t,o){new ve(e,o,xt.notSameMembers,!0).to.not.have.same.members(t)},xt.sameDeepMembers=function(e,t,o){new ve(e,o,xt.sameDeepMembers,!0).to.have.same.deep.members(t)},xt.notSameDeepMembers=function(e,t,o){new ve(e,o,xt.notSameDeepMembers,!0).to.not.have.same.deep.members(t)},xt.sameOrderedMembers=function(e,t,o){new ve(e,o,xt.sameOrderedMembers,!0).to.have.same.ordered.members(t)},xt.notSameOrderedMembers=function(e,t,o){new ve(e,o,xt.notSameOrderedMembers,!0).to.not.have.same.ordered.members(t)},xt.sameDeepOrderedMembers=function(e,t,o){new ve(e,o,xt.sameDeepOrderedMembers,!0).to.have.same.deep.ordered.members(t)},xt.notSameDeepOrderedMembers=function(e,t,o){new ve(e,o,xt.notSameDeepOrderedMembers,!0).to.not.have.same.deep.ordered.members(t)},xt.includeMembers=function(e,t,o){new ve(e,o,xt.includeMembers,!0).to.include.members(t)},xt.notIncludeMembers=function(e,t,o){new ve(e,o,xt.notIncludeMembers,!0).to.not.include.members(t)},xt.includeDeepMembers=function(e,t,o){new ve(e,o,xt.includeDeepMembers,!0).to.include.deep.members(t)},xt.notIncludeDeepMembers=function(e,t,o){new ve(e,o,xt.notIncludeDeepMembers,!0).to.not.include.deep.members(t)},xt.includeOrderedMembers=function(e,t,o){new ve(e,o,xt.includeOrderedMembers,!0).to.include.ordered.members(t)},xt.notIncludeOrderedMembers=function(e,t,o){new ve(e,o,xt.notIncludeOrderedMembers,!0).to.not.include.ordered.members(t)},xt.includeDeepOrderedMembers=function(e,t,o){new ve(e,o,xt.includeDeepOrderedMembers,!0).to.include.deep.ordered.members(t)},xt.notIncludeDeepOrderedMembers=function(e,t,o){new ve(e,o,xt.notIncludeDeepOrderedMembers,!0).to.not.include.deep.ordered.members(t)},xt.oneOf=function(e,t,o){new ve(e,o,xt.oneOf,!0).to.be.oneOf(t)},xt.isIterable=function(e,t){if(null==e||!e[Symbol.iterator])throw t=t?`${t} expected ${G(e)} to be an iterable`:`expected ${G(e)} to be an iterable`,new p(t,void 0,xt.isIterable)},xt.changes=function(e,t,o,n){3===arguments.length&&"function"==typeof t&&(n=o,o=null),new ve(e,n,xt.changes,!0).to.change(t,o)},xt.changesBy=function(e,t,o,n,a){if(4===arguments.length&&"function"==typeof t){let e=n;n=o,a=e}else 3===arguments.length&&(n=o,o=null);new ve(e,a,xt.changesBy,!0).to.change(t,o).by(n)},xt.doesNotChange=function(e,t,o,n){return 3===arguments.length&&"function"==typeof t&&(n=o,o=null),new ve(e,n,xt.doesNotChange,!0).to.not.change(t,o)},xt.changesButNotBy=function(e,t,o,n,a){if(4===arguments.length&&"function"==typeof t){let e=n;n=o,a=e}else 3===arguments.length&&(n=o,o=null);new ve(e,a,xt.changesButNotBy,!0).to.change(t,o).but.not.by(n)},xt.increases=function(e,t,o,n){return 3===arguments.length&&"function"==typeof t&&(n=o,o=null),new ve(e,n,xt.increases,!0).to.increase(t,o)},xt.increasesBy=function(e,t,o,n,a){if(4===arguments.length&&"function"==typeof t){let e=n;n=o,a=e}else 3===arguments.length&&(n=o,o=null);new ve(e,a,xt.increasesBy,!0).to.increase(t,o).by(n)},xt.doesNotIncrease=function(e,t,o,n){return 3===arguments.length&&"function"==typeof t&&(n=o,o=null),new ve(e,n,xt.doesNotIncrease,!0).to.not.increase(t,o)},xt.increasesButNotBy=function(e,t,o,n,a){if(4===arguments.length&&"function"==typeof t){let e=n;n=o,a=e}else 3===arguments.length&&(n=o,o=null);new ve(e,a,xt.increasesButNotBy,!0).to.increase(t,o).but.not.by(n)},xt.decreases=function(e,t,o,n){return 3===arguments.length&&"function"==typeof t&&(n=o,o=null),new ve(e,n,xt.decreases,!0).to.decrease(t,o)},xt.decreasesBy=function(e,t,o,n,a){if(4===arguments.length&&"function"==typeof t){let e=n;n=o,a=e}else 3===arguments.length&&(n=o,o=null);new ve(e,a,xt.decreasesBy,!0).to.decrease(t,o).by(n)},xt.doesNotDecrease=function(e,t,o,n){return 3===arguments.length&&"function"==typeof t&&(n=o,o=null),new ve(e,n,xt.doesNotDecrease,!0).to.not.decrease(t,o)},xt.doesNotDecreaseBy=function(e,t,o,n,a){if(4===arguments.length&&"function"==typeof t){let e=n;n=o,a=e}else 3===arguments.length&&(n=o,o=null);return new ve(e,a,xt.doesNotDecreaseBy,!0).to.not.decrease(t,o).by(n)},xt.decreasesButNotBy=function(e,t,o,n,a){if(4===arguments.length&&"function"==typeof t){let e=n;n=o,a=e}else 3===arguments.length&&(n=o,o=null);new ve(e,a,xt.decreasesButNotBy,!0).to.decrease(t,o).but.not.by(n)},xt.ifError=function(e){if(e)throw e},xt.isExtensible=function(e,t){new ve(e,t,xt.isExtensible,!0).to.be.extensible},xt.isNotExtensible=function(e,t){new ve(e,t,xt.isNotExtensible,!0).to.not.be.extensible},xt.isSealed=function(e,t){new ve(e,t,xt.isSealed,!0).to.be.sealed},xt.isNotSealed=function(e,t){new ve(e,t,xt.isNotSealed,!0).to.not.be.sealed},xt.isFrozen=function(e,t){new ve(e,t,xt.isFrozen,!0).to.be.frozen},xt.isNotFrozen=function(e,t){new ve(e,t,xt.isNotFrozen,!0).to.not.be.frozen},xt.isEmpty=function(e,t){new ve(e,t,xt.isEmpty,!0).to.be.empty},xt.isNotEmpty=function(e,t){new ve(e,t,xt.isNotEmpty,!0).to.not.be.empty},xt.containsSubset=function(e,t,o){new ve(e,o).to.containSubset(t)},xt.doesNotContainSubset=function(e,t,o){new ve(e,o).to.not.containSubset(t)};const Ot=[["isOk","ok"],["isNotOk","notOk"],["throws","throw"],["throws","Throw"],["isExtensible","extensible"],["isNotExtensible","notExtensible"],["isSealed","sealed"],["isNotSealed","notSealed"],["isFrozen","frozen"],["isNotFrozen","notFrozen"],["isEmpty","empty"],["isNotEmpty","notEmpty"],["isCallable","isFunction"],["isNotCallable","isNotFunction"],["containsSubset","containSubset"]];for(const[e,t]of Ot)xt[t]=xt[e];const Nt=xt,kt=vt,St=p,Et=[],jt=(e,t)=>t(),It=(e,t)=>Et.push({name:e,func:t});function zt(e){Et.forEach(e=>e.func())}jt(0,()=>{It("assert",()=>{Nt(!0,"expected foo to equal `bar`"),kt(()=>{Nt(!1,"expected foo to equal `baz`")}).to.throw(St,"expected foo to equal `baz`"),kt(()=>{Nt(!1,()=>"expected foo to equal `baz`")}).to.throw(St,"expected foo to equal `baz`")}),It("fail",()=>{kt(()=>{Nt.fail(0,1,"this has failed")}).to.throw(St,"this has failed")}),It("isTrue",()=>{Nt.isTrue(!0),kt(()=>{Nt.isTrue(!1,"blah")}).to.throw(St,"blah: expected false to be true"),kt(()=>{Nt.isTrue(1)}).to.throw(St,"expected 1 to be true"),kt(()=>{Nt.isTrue("test")}).to.throw(St,"expected 'test' to be true")}),It("isNotTrue",()=>{Nt.isNotTrue(!1),kt(()=>{Nt.isNotTrue(!0,"blah")}).to.throw(St,"blah: expected true to not equal true")}),It("isOk / ok",()=>{["isOk","ok"].forEach(e=>{Nt[e](!0),Nt[e](1),Nt[e]("test"),kt(()=>{Nt[e](!1,"blah")}).to.throw(St,"blah: expected false to be truthy"),kt(()=>{Nt[e](0)}).to.throw(St,"expected +0 to be truthy"),kt(()=>{Nt[e]("")}).to.throw(St,"expected '' to be truthy")})}),It("isNotOk / notOk",()=>{["isNotOk","notOk"].forEach(e=>{Nt[e](!1),Nt[e](0),Nt[e](""),kt(()=>{Nt[e](!0,"blah")}).to.throw(St,"blah: expected true to be falsy"),kt(()=>{Nt[e](1)}).to.throw(St,"expected 1 to be falsy"),kt(()=>{Nt[e]("test")}).to.throw(St,"expected 'test' to be falsy")})}),It("isFalse",()=>{Nt.isFalse(!1),kt(()=>{Nt.isFalse(!0,"blah")}).to.throw(St,"blah: expected true to be false"),kt(()=>{Nt.isFalse(0)}).to.throw(St,"expected +0 to be false")}),It("isNotFalse",()=>{Nt.isNotFalse(!0),kt(()=>{Nt.isNotFalse(!1,"blah")}).to.throw(St,"blah: expected false to not equal false")});const e=Symbol();function t(){}It("isEqual",()=>{Nt.equal(0,0),Nt.equal(e,e),Nt.equal("test","test"),Nt.equal(void 0,null),Nt.equal(void 0,void 0),kt(()=>{Nt.equal(NaN,NaN)}).to.throw(St,"expected NaN to equal NaN"),kt(()=>{Nt.equal(1,2,"blah")}).to.throw(St,"blah: expected 1 to equal 2")}),It("notEqual",()=>{Nt.notEqual(1,2),Nt.notEqual(NaN,NaN),Nt.notEqual(1,"test"),kt(()=>{Nt.notEqual("test","test")}).to.throw(St,"expected 'test' to not equal 'test'"),kt(()=>{Nt.notEqual(e,e)}).to.throw(St,"expected Symbol() to not equal Symbol()")}),It("strictEqual",()=>{Nt.strictEqual(0,0),Nt.strictEqual(0,-0),Nt.strictEqual("foo","foo"),Nt.strictEqual(e,e),kt(()=>{Nt.strictEqual("5",5,"blah")}).to.throw(St,"blah: expected '5' to equal 5")}),It("notStrictEqual",()=>{Nt.notStrictEqual(5,"5"),Nt.notStrictEqual(NaN,NaN),Nt.notStrictEqual(Symbol(),Symbol()),kt(()=>{Nt.notStrictEqual(5,5,"blah")}).to.throw(St,"blah: expected 5 to not equal 5")}),It("deepEqual",()=>{const e=Object.create({tea:"chai"}),t=Object.create({tea:"chai"});Nt.deepEqual(/a/,/a/),Nt.deepEqual(/a/g,/a/g),Nt.deepEqual(/a/i,/a/i),Nt.deepEqual(/a/m,/a/m),Nt.deepEqual(e,t),Nt.deepEqual([NaN],[NaN]),Nt.deepEqual({tea:NaN},{tea:NaN}),Nt.deepEqual({tea:"chai"},{tea:"chai"}),Nt.deepEqual({a:"a",b:"b"},{b:"b",a:"a"}),Nt.deepEqual(new Date(1,2,3),new Date(1,2,3)),kt(()=>{Nt.deepEqual({tea:"chai"},{tea:"black"})}).to.throw(St);const o=Object.create({tea:"chai"}),n=Object.create({tea:"black"});kt(()=>{Nt.deepEqual(o,n)}).to.throw(St);const a={},r={};a.field=a,r.field=r,Nt.deepEqual(a,r),kt(()=>{r.field2=r,Nt.deepEqual(a,r)}).to.throw(St)}),It("notDeepEqual",()=>{Nt.notDeepEqual({tea:"jasmine"},{tea:"chai"}),Nt.notDeepEqual(/a/,/b/),Nt.notDeepEqual(/a/,{}),Nt.notDeepEqual(/a/g,/b/g),Nt.notDeepEqual(/a/i,/b/i),Nt.notDeepEqual(/a/m,/b/m),Nt.notDeepEqual(new Date(1,2,3),new Date(4,5,6)),Nt.notDeepEqual(new Date(1,2,3),{}),kt(()=>{Nt.notDeepEqual({tea:"chai"},{tea:"chai"})}).to.throw(St);const e={},t={tea:"jasmine"};e.field=e,t.field=t,Nt.notDeepEqual(e,t),kt(()=>{delete t.tea,Nt.notDeepEqual(e,t)}).to.throw(St)}),It("typeOf",()=>{Nt.typeOf("test","string"),Nt.typeOf(!0,"boolean"),Nt.typeOf(NaN,"number"),Nt.typeOf(e,"symbol"),kt(()=>{Nt.typeOf(5,"string","blah")}).to.throw(St,"blah: expected 5 to be a string")}),It("notTypeOf",()=>{Nt.notTypeOf(5,"string"),Nt.notTypeOf(e,"string"),Nt.notTypeOf(null,"object"),Nt.notTypeOf("test","number"),kt(()=>{Nt.notTypeOf(5,"number","blah")}).to.throw(St,"blah: expected 5 not to be a number")});const o={[Symbol.hasInstance]:e=>3===e};It("instanceOf",()=>{Nt.instanceOf({},Object),Nt.instanceOf(/a/,RegExp),Nt.instanceOf(new t,t),Nt.instanceOf(3,o),kt(()=>{Nt.instanceOf(new t,1)}).to.throw("The instanceof assertion needs a constructor but Number was given."),kt(()=>{Nt.instanceOf(new t,"Foo")}).to.throw("The instanceof assertion needs a constructor but String was given."),kt(()=>{Nt.instanceOf(4,o)}).to.throw("expected 4 to be an instance of an unnamed constructor")}),It("notInstanceOf",()=>{Nt.notInstanceOf({},t),Nt.notInstanceOf({},Array),Nt.notInstanceOf(new t,Array),kt(()=>{Nt.notInstanceOf(new t,t)}).to.throw("expected Foo{} to not be an instance of Foo"),kt(()=>{Nt.notInstanceOf(3,o)}).to.throw("expected 3 to not be an instance of an unnamed constructor")}),It("isObject",()=>{Nt.isObject({}),Nt.isObject(new t),kt(()=>{Nt.isObject(!0)}).to.throw(St,"expected true to be an object"),kt(()=>{Nt.isObject(t)}).to.throw(St,"expected [Function Foo] to be an object"),kt(()=>{Nt.isObject("foo")}).to.throw(St,"expected 'foo' to be an object")}),It("isNotObject",()=>{Nt.isNotObject(1),Nt.isNotObject([]),Nt.isNotObject(/a/),Nt.isNotObject(t),Nt.isNotObject("foo"),kt(()=>{Nt.isNotObject({},"blah")}).to.throw(St,"blah: expected {} not to be an object")}),It("include",()=>{Nt.include("foobar","bar"),Nt.include("",""),Nt.include([1,2,3],3),Nt.include(new Error("foo"),{message:"foo"}),Nt.include({a:1,[Symbol.toStringTag]:"foo"},{a:1});var e={a:1},t={b:2};Nt.include([e,t],e),Nt.include({foo:e,bar:t},{foo:e}),Nt.include({foo:e,bar:t},{foo:e,bar:t});var o=new Map,n=[{a:1}];o.set("a",n),o.set("b",2),o.set("c",-0),o.set("d",NaN),Nt.include(o,n),Nt.include(o,2),Nt.include(o,0),Nt.include(o,NaN);var a=new Set;n=[{a:1}],a.add(n),a.add(2),a.add(-0),a.add(NaN),Nt.include(a,n),Nt.include(a,2),Nt.include(a,NaN);var r=new WeakSet;n=[{a:1}],r.add(n),Nt.include(r,n);var s=Symbol(),i=Symbol();Nt.include([s,i],s),kt(()=>{Nt.include("foobar","baz","blah")}).to.throw(St,"blah: expected 'foobar' to include 'baz'"),kt(()=>{Nt.include([{a:1},{b:2}],{a:1})}).to.throw(St,"expected [ { a: 1 }, { b: 2 } ] to include { a: 1 }"),kt(()=>{Nt.include({foo:{a:1},bar:{b:2}},{foo:{a:1}},"blah")}).to.throw(St,"blah: expected { foo: { a: 1 }, bar: { b: 2 } } to have property 'foo' of { a: 1 }, but got { a: 1 }"),kt(()=>{Nt.include(!0,!0,"blah")}).to.throw(St,"blah: the given combination of arguments (boolean and boolean) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a boolean"),kt(()=>{Nt.include(42,"bar")}).to.throw(St,"the given combination of arguments (number and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"),kt(()=>{Nt.include(null,42)}).to.throw(St,"the given combination of arguments (null and number) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a number"),kt(()=>{Nt.include(void 0,"bar")}).to.throw(St,"the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string")}),It("notInclude",()=>{Nt.notInclude("foobar","baz"),Nt.notInclude([1,2,3],4);var e={a:1},t={b:2};Nt.notInclude([e,t],{a:1}),Nt.notInclude({foo:e,bar:t},{foo:{a:1}}),Nt.notInclude({foo:e,bar:t},{foo:e,bar:{b:2}});var o=new Map,n=[{a:1}];o.set("a",n),o.set("b",2),Nt.notInclude(o,[{a:1}]),Nt.notInclude(o,3);var a=new Set;n=[{a:1}],a.add(n),a.add(2),Nt.include(a,n),Nt.include(a,2),Nt.notInclude(a,[{a:1}]),Nt.notInclude(a,3);var r=new WeakSet;n=[{a:1}],r.add(n),Nt.notInclude(r,[{a:1}]),Nt.notInclude(r,{});var s=Symbol(),i=Symbol(),l=Symbol();Nt.notInclude([s,i],l),kt(()=>{var e={a:1};Nt.notInclude([e,{b:2}],e,"blah")}).to.throw(St,"blah: expected [ { a: 1 }, { b: 2 } ] to not include { a: 1 }"),kt(()=>{var e={a:1},t={b:2};Nt.notInclude({foo:e,bar:t},{foo:e,bar:t},"blah")}).to.throw(St,"blah: expected { foo: { a: 1 }, bar: { b: 2 } } to not have property 'foo' of { a: 1 }"),kt(()=>{Nt.notInclude(!0,!0,"blah")}).to.throw(St,"blah: the given combination of arguments (boolean and boolean) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a boolean"),kt(()=>{Nt.notInclude(42,"bar")}).to.throw(St,"the given combination of arguments (number and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"),kt(()=>{Nt.notInclude(null,42)}).to.throw(St,"the given combination of arguments (null and number) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a number"),kt(()=>{Nt.notInclude(void 0,"bar")}).to.throw(St,"the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string"),kt(()=>{Nt.notInclude("foobar","bar")}).to.throw(St,"expected 'foobar' to not include 'bar'")}),It("deepInclude and notDeepInclude",()=>{var e={a:1},t={b:2};Nt.deepInclude([e,t],{a:1}),Nt.notDeepInclude([e,t],{a:9}),Nt.notDeepInclude([e,t],{z:1}),Nt.deepInclude({foo:e,bar:t},{foo:{a:1}}),Nt.deepInclude({foo:e,bar:t},{foo:{a:1},bar:{b:2}}),Nt.notDeepInclude({foo:e,bar:t},{foo:{a:9}}),Nt.notDeepInclude({foo:e,bar:t},{foo:{z:1}}),Nt.notDeepInclude({foo:e,bar:t},{baz:{a:1}}),Nt.notDeepInclude({foo:e,bar:t},{foo:{a:1},bar:{b:9}});var o=new Map;o.set(1,[{a:1}]),Nt.deepInclude(o,[{a:1}]);var n=new Set;n.add([{a:1}]),Nt.deepInclude(n,[{a:1}]),kt(()=>{Nt.deepInclude(new WeakSet,{},"foo")}).to.throw(St,"foo: unable to use .deep.include with WeakSet"),kt(()=>{Nt.deepInclude([e,t],{a:9},"blah")}).to.throw(St,"blah: expected [ { a: 1 }, { b: 2 } ] to deep include { a: 9 }"),kt(()=>{Nt.notDeepInclude([e,t],{a:1})}).to.throw(St,"expected [ { a: 1 }, { b: 2 } ] to not deep include { a: 1 }"),kt(()=>{Nt.deepInclude({foo:e,bar:t},{foo:{a:1},bar:{b:9}},"blah")}).to.throw(St,"blah: expected { foo: { a: 1 }, bar: { b: 2 } } to have deep property 'bar' of { b: 9 }, but got { b: 2 }"),kt(()=>{Nt.notDeepInclude({foo:e,bar:t},{foo:{a:1},bar:{b:2}},"blah")}).to.throw(St,"blah: expected { foo: { a: 1 }, bar: { b: 2 } } to not have deep property 'foo' of { a: 1 }")}),It("nestedInclude and notNestedInclude",()=>{Nt.nestedInclude({a:{b:["x","y"]}},{"a.b[1]":"y"}),Nt.notNestedInclude({a:{b:["x","y"]}},{"a.b[1]":"x"}),Nt.notNestedInclude({a:{b:["x","y"]}},{"a.c":"y"}),Nt.notNestedInclude({a:{b:[{x:1}]}},{"a.b[0]":{x:1}}),Nt.nestedInclude({".a":{"[b]":"x"}},{"\\.a.\\[b\\]":"x"}),Nt.notNestedInclude({".a":{"[b]":"x"}},{"\\.a.\\[b\\]":"y"}),kt(()=>{Nt.nestedInclude({a:{b:["x","y"]}},{"a.b[1]":"x"},"blah")}).to.throw(St,"blah: expected { a: { b: [ 'x', 'y' ] } } to have nested property 'a.b[1]' of 'x', but got 'y'"),kt(()=>{Nt.nestedInclude({a:{b:["x","y"]}},{"a.b[1]":"x"},"blah")}).to.throw(St,"blah: expected { a: { b: [ 'x', 'y' ] } } to have nested property 'a.b[1]' of 'x', but got 'y'"),kt(()=>{Nt.nestedInclude({a:{b:["x","y"]}},{"a.c":"y"})}).to.throw(St,"expected { a: { b: [ 'x', 'y' ] } } to have nested property 'a.c'"),kt(()=>{Nt.notNestedInclude({a:{b:["x","y"]}},{"a.b[1]":"y"},"blah")}).to.throw(St,"blah: expected { a: { b: [ 'x', 'y' ] } } to not have nested property 'a.b[1]' of 'y'")}),It("deepNestedInclude and notDeepNestedInclude",()=>{Nt.deepNestedInclude({a:{b:[{x:1}]}},{"a.b[0]":{x:1}}),Nt.notDeepNestedInclude({a:{b:[{x:1}]}},{"a.b[0]":{y:2}}),Nt.notDeepNestedInclude({a:{b:[{x:1}]}},{"a.c":{x:1}}),Nt.deepNestedInclude({".a":{"[b]":{x:1}}},{"\\.a.\\[b\\]":{x:1}}),Nt.notDeepNestedInclude({".a":{"[b]":{x:1}}},{"\\.a.\\[b\\]":{y:2}}),kt(()=>{Nt.deepNestedInclude({a:{b:[{x:1}]}},{"a.b[0]":{y:2}},"blah")}).to.throw(St,"blah: expected { a: { b: [ { x: 1 } ] } } to have deep nested property 'a.b[0]' of { y: 2 }, but got { x: 1 }"),kt(()=>{Nt.deepNestedInclude({a:{b:[{x:1}]}},{"a.b[0]":{y:2}},"blah")}).to.throw(St,"blah: expected { a: { b: [ { x: 1 } ] } } to have deep nested property 'a.b[0]' of { y: 2 }, but got { x: 1 }"),kt(()=>{Nt.deepNestedInclude({a:{b:[{x:1}]}},{"a.c":{x:1}})}).to.throw(St,"expected { a: { b: [ { x: 1 } ] } } to have deep nested property 'a.c'"),kt(()=>{Nt.notDeepNestedInclude({a:{b:[{x:1}]}},{"a.b[0]":{x:1}},"blah")}).to.throw(St,"blah: expected { a: { b: [ { x: 1 } ] } } to not have deep nested property 'a.b[0]' of { x: 1 }")}),It("ownInclude and notOwnInclude",()=>{Nt.ownInclude({a:1},{a:1}),Nt.notOwnInclude({a:1},{a:3}),Nt.notOwnInclude({a:1},{toString:Object.prototype.toString}),Nt.notOwnInclude({a:{b:2}},{a:{b:2}}),kt(()=>{Nt.ownInclude({a:1},{a:3},"blah")}).to.throw(St,"blah: expected { a: 1 } to have own property 'a' of 3, but got 1"),kt(()=>{Nt.ownInclude({a:1},{a:3},"blah")}).to.throw(St,"blah: expected { a: 1 } to have own property 'a' of 3, but got 1"),kt(()=>{Nt.ownInclude({a:1},{toString:Object.prototype.toString})}).to.throw(St,"expected { a: 1 } to have own property 'toString'"),kt(()=>{Nt.notOwnInclude({a:1},{a:1},"blah")}).to.throw(St,"blah: expected { a: 1 } to not have own property 'a' of 1")}),It("deepOwnInclude and notDeepOwnInclude",()=>{Nt.deepOwnInclude({a:{b:2}},{a:{b:2}}),Nt.notDeepOwnInclude({a:{b:2}},{a:{c:3}}),Nt.notDeepOwnInclude({a:{b:2}},{toString:Object.prototype.toString}),kt(()=>{Nt.deepOwnInclude({a:{b:2}},{a:{c:3}},"blah")}).to.throw(St,"blah: expected { a: { b: 2 } } to have deep own property 'a' of { c: 3 }, but got { b: 2 }"),kt(()=>{Nt.deepOwnInclude({a:{b:2}},{a:{c:3}},"blah")}).to.throw(St,"blah: expected { a: { b: 2 } } to have deep own property 'a' of { c: 3 }, but got { b: 2 }"),kt(()=>{Nt.deepOwnInclude({a:{b:2}},{toString:Object.prototype.toString})}).to.throw(St,"expected { a: { b: 2 } } to have deep own property 'toString'"),kt(()=>{Nt.notDeepOwnInclude({a:{b:2}},{a:{b:2}},"blah")}).to.throw(St,"blah: expected { a: { b: 2 } } to not have deep own property 'a' of { b: 2 }")}),It("lengthOf",()=>{Nt.lengthOf([1,2,3],3),Nt.lengthOf("foobar",6),kt(()=>{Nt.lengthOf("foobar",5,"blah")}).to.throw(St,"blah: expected 'foobar' to have a length of 5 but got 6"),kt(()=>{Nt.lengthOf(1,5)}).to.throw(St,"expected 1 to have property 'length'")}),It("match",()=>{Nt.match("foobar",/^foo/),Nt.notMatch("foobar",/^bar/),kt(()=>{Nt.match("foobar",/^bar/i,"blah")}).to.throw(St,"blah: expected 'foobar' to match /^bar/i"),kt(()=>{Nt.notMatch("foobar",/^foo/i,"blah")}).to.throw(St,"blah: expected 'foobar' not to match /^foo/i")})}),jt(0,()=>{const e=Symbol();jt(0,()=>{It("throws when invalid property follows expect",function(){kt(()=>{kt(42).pizza}).to.throw(Error,"Invalid Chai property: pizza")}),It("throws when invalid property follows language chain",function(){kt(()=>{kt(42).to.pizza}).to.throw(Error,"Invalid Chai property: pizza")}),It("throws when invalid property follows property assertion",function(){kt(()=>{kt(42).ok.pizza}).to.throw(Error,"Invalid Chai property: pizza")}),It("throws when invalid property follows uncalled method assertion",function(){kt(()=>{kt(42).equal.pizza}).to.throw(Error,'Invalid Chai property: equal.pizza. See docs for proper usage of "equal".')}),It("throws when invalid property follows called method assertion",function(){kt(()=>{kt(42).equal(42).pizza}).to.throw(Error,"Invalid Chai property: pizza")}),It("throws when invalid property follows uncalled chainable method assertion",function(){kt(()=>{kt(42).a.pizza}).to.throw(Error,"Invalid Chai property: pizza")}),It("throws when invalid property follows called chainable method assertion",function(){kt(()=>{kt(42).a("number").pizza}).to.throw(Error,"Invalid Chai property: pizza")}),It("doesn't throw if invalid property is excluded via config",function(){kt(()=>{kt(42).then}).to.not.throw()})}),It("no-op chains",()=>{["to","be","been","is","and","has","have","with","that","which","at","of","same","but","does"].forEach(e=>{kt(kt(1)[e]).not.undefined,kt(1)[e].equal(1),kt(!1)[e].false,kt(!1)[e].not.true,kt([1,2,3])[e].contains(1)})}),It("fail",()=>{kt(()=>{kt.fail(0,1,"this has failed")}).to.throw(St,"this has failed")}),It("true",()=>{kt(!0).to.be.true,kt(!1).to.not.be.true,kt(1).to.not.be.true,kt(()=>{kt("test","blah").to.be.true}).to.throw(St,"blah: expected 'test' to be true")}),It("ok",()=>{kt(!0).to.be.ok,kt(!1).to.not.be.ok,kt(1).to.be.ok,kt(0).to.not.be.ok,kt(()=>{kt("","blah").to.be.ok}).to.throw(St,"blah: expected '' to be truthy"),kt(()=>{kt("test").to.not.be.ok}).to.throw(St,"expected 'test' to be falsy")}),It("false",()=>{kt(!1).to.be.false,kt(!0).to.not.be.false,kt(0).to.not.be.false,kt(()=>{kt("","blah").to.be.false}).to.throw(St,"blah: expected '' to be false")}),It("null",()=>{kt(null).to.be.null,kt(!1).to.not.be.null,kt(()=>{kt("","blah").to.be.null}).to.throw(St,"blah: expected '' to be null")}),It("undefined",()=>{kt(void 0).to.be.undefined,kt(null).to.not.be.undefined,kt(()=>{kt("","blah").to.be.undefined}).to.throw(St,"blah: expected '' to be undefined")}),It("exist",()=>{const e="bar";var t;kt(e).to.exist,kt(t).to.not.exist,kt(0).to.exist,kt(!1).to.exist,kt("").to.exist,kt(()=>{kt(t,"blah").to.exist}).to.throw(St,"blah: expected undefined to exist"),kt(()=>{kt(e).to.not.exist(e)}).to.throw(St,"expected 'bar' to not exist")}),It("arguments",()=>{var e=function(){return arguments}(1,2,3);kt(e).to.be.arguments,kt([]).to.not.be.arguments,kt(e).to.be.an("arguments").and.be.arguments,kt([]).to.be.an("array").and.not.be.Arguments,kt(()=>{kt([]).to.be.arguments}).to.throw(St,"expected [] to be arguments but got Array")}),It("instanceof",()=>{function e(){}kt(new e).to.be.an.instanceof(e),kt(()=>{kt(new e).to.an.instanceof(1,"blah")}).to.throw(St,"blah: The instanceof assertion needs a constructor but Number was given."),kt(()=>{kt(new e,"blah").to.an.instanceof(1)}).to.throw(St,"blah: The instanceof assertion needs a constructor but Number was given."),kt(()=>{kt(new e).to.an.instanceof("batman")}).to.throw(St,"The instanceof assertion needs a constructor but String was given."),kt(()=>{kt(new e).to.an.instanceof({})}).to.throw(St,"The instanceof assertion needs a constructor but Object was given."),kt(()=>{kt(new e).to.an.instanceof(!0)}).to.throw(St,"The instanceof assertion needs a constructor but Boolean was given."),kt(()=>{kt(new e).to.an.instanceof(null)}).to.throw(St,"The instanceof assertion needs a constructor but null was given."),kt(()=>{kt(new e).to.an.instanceof(void 0)}).to.throw(St,"The instanceof assertion needs a constructor but undefined was given."),kt(()=>{function e(){}var t=new e;e.prototype=1337,kt(t).to.an.instanceof(e)}).to.throw(St,"The instanceof assertion needs a constructor but Function was given."),kt(()=>{kt(new e).to.an.instanceof(Symbol())}).to.throw(St,"The instanceof assertion needs a constructor but Symbol was given."),kt(()=>{var e={};e[Symbol.hasInstance]=function(e){return 3===e},kt(4).to.be.an.instanceof(e)}).to.throw(St,"expected 4 to be an instance of an unnamed constructor"),kt(()=>{var e={};e[Symbol.hasInstance]=function(e){return 4===e},kt(4).to.not.be.an.instanceof(e)}).to.throw(St,"expected 4 to not be an instance of an unnamed constructor"),kt(()=>{kt(3).to.an.instanceof(e,"blah")}).to.throw(St,"blah: expected 3 to be an instance of Foo"),kt(()=>{kt(3,"blah").to.an.instanceof(e)}).to.throw(St,"blah: expected 3 to be an instance of Foo")}),It("within(start, finish)",()=>{kt(5).to.be.within(5,10),kt(5).to.be.within(3,6),kt(5).to.be.within(3,5),kt(5).to.not.be.within(1,3),kt("foo").to.have.length.within(2,4),kt("foo").to.have.lengthOf.within(2,4),kt([1,2,3]).to.have.length.within(2,4),kt([1,2,3]).to.have.lengthOf.within(2,4),kt(()=>{kt(5).to.not.be.within(4,6,"blah")}).to.throw(St,"blah: expected 5 to not be within 4..6"),kt(()=>{kt(5,"blah").to.not.be.within(4,6)}).to.throw(St,"blah: expected 5 to not be within 4..6"),kt(()=>{kt(10).to.be.within(50,100,"blah")}).to.throw(St,"blah: expected 10 to be within 50..100"),kt(()=>{kt("foo").to.have.length.within(5,7,"blah")}).to.throw(St,"blah: expected 'foo' to have a length within 5..7"),kt(()=>{kt("foo","blah").to.have.length.within(5,7)}).to.throw(St,"blah: expected 'foo' to have a length within 5..7"),kt(()=>{kt("foo").to.have.lengthOf.within(5,7,"blah")}).to.throw(St,"blah: expected 'foo' to have a length within 5..7"),kt(()=>{kt([1,2,3]).to.have.length.within(5,7,"blah")}).to.throw(St,"blah: expected [ 1, 2, 3 ] to have a length within 5..7"),kt(()=>{kt([1,2,3]).to.have.lengthOf.within(5,7,"blah")}).to.throw(St,"blah: expected [ 1, 2, 3 ] to have a length within 5..7"),kt(()=>{kt(null).to.be.within(0,1,"blah")}).to.throw(St,"blah: expected null to be a number or a date"),kt(()=>{kt(null,"blah").to.be.within(0,1)}).to.throw(St,"blah: expected null to be a number or a date"),kt(()=>{kt(1).to.be.within(null,1,"blah")}).to.throw(St,"blah: the arguments to within must be numbers"),kt(()=>{kt(1,"blah").to.be.within(null,1)}).to.throw(St,"blah: the arguments to within must be numbers"),kt(()=>{kt(1).to.be.within(0,null,"blah")}).to.throw(St,"blah: the arguments to within must be numbers"),kt(()=>{kt(1,"blah").to.be.within(0,null)}).to.throw(St,"blah: the arguments to within must be numbers"),kt(()=>{kt(null).to.not.be.within(0,1,"blah")}).to.throw(St,"blah: expected null to be a number or a date"),kt(()=>{kt(1).to.not.be.within(null,1,"blah")}).to.throw(St,"blah: the arguments to within must be numbers"),kt(()=>{kt(1).to.not.be.within(0,null,"blah")}).to.throw(St,"blah: the arguments to within must be numbers"),kt(()=>{kt(1).to.have.length.within(5,7,"blah")}).to.throw(St,"blah: expected 1 to have property 'length'"),kt(()=>{kt(1,"blah").to.have.length.within(5,7)}).to.throw(St,"blah: expected 1 to have property 'length'"),kt(()=>{kt(1).to.have.lengthOf.within(5,7,"blah")}).to.throw(St,"blah: expected 1 to have property 'length'")}),It("within(start, finish) (dates)",()=>{const e=new Date,t=new Date(e.getTime()-1e3),o=new Date(e.getTime()+1e3),n=e.toISOString(),a=t.toISOString(),r=o.toISOString();kt(e).to.be.within(t,o),kt(e).to.be.within(e,o),kt(e).to.be.within(e,e),kt(t).to.not.be.within(e,o),kt(()=>{kt(e).to.not.be.within(e,o,"blah")}).to.throw(St,"blah: expected "+n+" to not be within "+n+".."+r),kt(()=>{kt(e,"blah").to.not.be.within(t,o)}).to.throw(St,"blah: expected "+n+" to not be within "+a+".."+r),kt(()=>{kt(e).to.have.length.within(5,7,"blah")}).to.throw(St,"blah: expected "+n+" to have property 'length'"),kt(()=>{kt("foo").to.have.lengthOf.within(e,7,"blah")}).to.throw(St,"blah: the arguments to within must be numbers"),kt(()=>{kt(e).to.be.within(e,1,"blah")}).to.throw(St,"blah: the arguments to within must be dates"),kt(()=>{kt(e).to.be.within(null,e,"blah")}).to.throw(St,"blah: the arguments to within must be dates"),kt(()=>{kt(e).to.be.within(e,void 0,"blah")}).to.throw(St,"blah: the arguments to within must be dates"),kt(()=>{kt(e,"blah").to.be.within(1,e)}).to.throw(St,"blah: the arguments to within must be dates"),kt(()=>{kt(e,"blah").to.be.within(e,1)}).to.throw(St,"blah: the arguments to within must be dates"),kt(()=>{kt(null).to.not.be.within(e,o,"blah")}).to.throw(St,"blah: expected null to be a number or a date")}),It("above(n)",()=>{kt(5).to.be.above(2),kt(5).to.be.greaterThan(2),kt(5).to.not.be.above(5),kt(5).to.not.be.above(6),kt("foo").to.have.length.above(2),kt("foo").to.have.lengthOf.above(2),kt([1,2,3]).to.have.length.above(2),kt([1,2,3]).to.have.lengthOf.above(2),kt(()=>{kt(5).to.be.above(6,"blah")}).to.throw(St,"blah: expected 5 to be above 6"),kt(()=>{kt(5,"blah").to.be.above(6)}).to.throw(St,"blah: expected 5 to be above 6"),kt(()=>{kt(10).to.not.be.above(6,"blah")}).to.throw(St,"blah: expected 10 to be at most 6"),kt(()=>{kt("foo").to.have.length.above(4,"blah")}).to.throw(St,"blah: expected 'foo' to have a length above 4 but got 3"),kt(()=>{kt("foo","blah").to.have.length.above(4)}).to.throw(St,"blah: expected 'foo' to have a length above 4 but got 3"),kt(()=>{kt("foo").to.have.lengthOf.above(4,"blah")}).to.throw(St,"blah: expected 'foo' to have a length above 4 but got 3"),kt(()=>{kt([1,2,3]).to.have.length.above(4,"blah")}).to.throw(St,"blah: expected [ 1, 2, 3 ] to have a length above 4 but got 3"),kt(()=>{kt([1,2,3]).to.have.lengthOf.above(4,"blah")}).to.throw(St,"blah: expected [ 1, 2, 3 ] to have a length above 4 but got 3"),kt(()=>{kt(null).to.be.above(0,"blah")}).to.throw(St,"blah: expected null to be a number or a date"),kt(()=>{kt(null,"blah").to.be.above(0)}).to.throw(St,"blah: expected null to be a number or a date"),kt(()=>{kt(1).to.be.above(null,"blah")}).to.throw(St,"blah: the argument to above must be a number"),kt(()=>{kt(1,"blah").to.be.above(null)}).to.throw(St,"blah: the argument to above must be a number"),kt(()=>{kt(null).to.not.be.above(0,"blah")}).to.throw(St,"blah: expected null to be a number or a date"),kt(()=>{kt(1).to.not.be.above(null,"blah")}).to.throw(St,"blah: the argument to above must be a number"),kt(()=>{kt(1).to.have.length.above(0,"blah")}).to.throw(St,"blah: expected 1 to have property 'length'"),kt(()=>{kt(1,"blah").to.have.length.above(0)}).to.throw(St,"blah: expected 1 to have property 'length'"),kt(()=>{kt(1).to.have.lengthOf.above(0,"blah")}).to.throw(St,"blah: expected 1 to have property 'length'")}),It("above(n) (dates)",()=>{const e=new Date,t=new Date(e.getTime()-1e3),o=new Date(e.getTime()+1e3);kt(e).to.be.above(t),kt(e).to.be.greaterThan(t),kt(e).to.not.be.above(e),kt(e).to.not.be.above(o),kt(()=>{kt(e).to.be.above(o,"blah")}).to.throw(St,"blah: expected "+e.toISOString()+" to be above "+o.toISOString()),kt(()=>{kt(10).to.not.be.above(6,"blah")}).to.throw(St,"blah: expected 10 to be at most 6"),kt(()=>{kt(e).to.have.length.above(4,"blah")}).to.throw(St,"blah: expected "+e.toISOString()+" to have property 'length'"),kt(()=>{kt([1,2,3]).to.have.length.above(e,"blah")}).to.throw(St,"blah: the argument to above must be a number"),kt(()=>{kt(null).to.be.above(e,"blah")}).to.throw(St,"blah: expected null to be a number or a date"),kt(()=>{kt(e).to.be.above(null,"blah")}).to.throw(St,"blah: the argument to above must be a date"),kt(()=>{kt(null).to.have.length.above(0,"blah")}).to.throw(St,"blah: Target cannot be null or undefined.")}),It("least(n)",()=>{kt(5).to.be.at.least(2),kt(5).to.be.at.least(5),kt(5).to.not.be.at.least(6),kt("foo").to.have.length.of.at.least(2),kt("foo").to.have.lengthOf.at.least(2),kt([1,2,3]).to.have.length.of.at.least(2),kt([1,2,3]).to.have.lengthOf.at.least(2),kt(()=>{kt(5).to.be.at.least(6,"blah")}).to.throw(St,"blah: expected 5 to be at least 6"),kt(()=>{kt(5,"blah").to.be.at.least(6)}).to.throw(St,"blah: expected 5 to be at least 6"),kt(()=>{kt(10).to.not.be.at.least(6,"blah")}).to.throw(St,"blah: expected 10 to be below 6"),kt(()=>{kt("foo").to.have.length.of.at.least(4,"blah")}).to.throw(St,"blah: expected 'foo' to have a length at least 4 but got 3"),kt(()=>{kt("foo","blah").to.have.length.of.at.least(4)}).to.throw(St,"blah: expected 'foo' to have a length at least 4 but got 3"),kt(()=>{kt("foo").to.have.lengthOf.at.least(4,"blah")}).to.throw(St,"blah: expected 'foo' to have a length at least 4 but got 3"),kt(()=>{kt([1,2,3]).to.have.length.of.at.least(4,"blah")}).to.throw(St,"blah: expected [ 1, 2, 3 ] to have a length at least 4 but got 3"),kt(()=>{kt([1,2,3]).to.have.lengthOf.at.least(4,"blah")}).to.throw(St,"blah: expected [ 1, 2, 3 ] to have a length at least 4 but got 3"),kt(()=>{kt([1,2,3,4]).to.not.have.length.of.at.least(4,"blah")}).to.throw(St,"blah: expected [ 1, 2, 3, 4 ] to have a length below 4"),kt(()=>{kt([1,2,3,4]).to.not.have.lengthOf.at.least(4,"blah")}).to.throw(St,"blah: expected [ 1, 2, 3, 4 ] to have a length below 4"),kt(()=>{kt(null).to.be.at.least(0,"blah")}).to.throw(St,"blah: expected null to be a number or a date"),kt(()=>{kt(null,"blah").to.be.at.least(0)}).to.throw(St,"blah: expected null to be a number or a date"),kt(()=>{kt(1).to.be.at.least(null,"blah")}).to.throw(St,"blah: the argument to least must be a number"),kt(()=>{kt(1,"blah").to.be.at.least(null)}).to.throw(St,"blah: the argument to least must be a number"),kt(()=>{kt(null).to.not.be.at.least(0,"blah")}).to.throw(St,"blah: expected null to be a number or a date"),kt(()=>{kt(1).to.not.be.at.least(null,"blah")}).to.throw(St,"blah: the argument to least must be a number"),kt(()=>{kt(1).to.have.length.at.least(0,"blah")}).to.throw(St,"blah: expected 1 to have property 'length'"),kt(()=>{kt(1,"blah").to.have.length.at.least(0)}).to.throw(St,"blah: expected 1 to have property 'length'"),kt(()=>{kt(1).to.have.lengthOf.at.least(0,"blah")}).to.throw(St,"blah: expected 1 to have property 'length'")}),It("below(n)",()=>{kt(2).to.be.below(5),kt(2).to.be.lessThan(5),kt(2).to.not.be.below(2),kt(2).to.not.be.below(1),kt("foo").to.have.length.below(4),kt("foo").to.have.lengthOf.below(4),kt([1,2,3]).to.have.length.below(4),kt([1,2,3]).to.have.lengthOf.below(4),kt(()=>{kt(6).to.be.below(5,"blah")}).to.throw(St,"blah: expected 6 to be below 5"),kt(()=>{kt(6,"blah").to.be.below(5)}).to.throw(St,"blah: expected 6 to be below 5"),kt(()=>{kt(6).to.not.be.below(10,"blah")}).to.throw(St,"blah: expected 6 to be at least 10"),kt(()=>{kt("foo").to.have.length.below(2,"blah")}).to.throw(St,"blah: expected 'foo' to have a length below 2 but got 3"),kt(()=>{kt("foo","blah").to.have.length.below(2)}).to.throw(St,"blah: expected 'foo' to have a length below 2 but got 3"),kt(()=>{kt("foo").to.have.lengthOf.below(2,"blah")}).to.throw(St,"blah: expected 'foo' to have a length below 2 but got 3"),kt(()=>{kt([1,2,3]).to.have.length.below(2,"blah")}).to.throw(St,"blah: expected [ 1, 2, 3 ] to have a length below 2 but got 3"),kt(()=>{kt([1,2,3]).to.have.lengthOf.below(2,"blah")}).to.throw(St,"blah: expected [ 1, 2, 3 ] to have a length below 2 but got 3"),kt(()=>{kt(null).to.be.below(0,"blah")}).to.throw(St,"blah: expected null to be a number or a date"),kt(()=>{kt(null,"blah").to.be.below(0)},"blah: expected null to be a number or a date"),kt(()=>{kt(1).to.be.below(null,"blah")}).to.throw(St,"blah: the argument to below must be a number"),kt(()=>{kt(1,"blah").to.be.below(null)}).to.throw(St,"blah: the argument to below must be a number"),kt(()=>{kt(null).to.not.be.below(0,"blah")}).to.throw(St,"blah: expected null to be a number or a date"),kt(()=>{kt(1).to.not.be.below(null,"blah")}).to.throw(St,"blah: the argument to below must be a number"),kt(()=>{kt(1).to.have.length.below(0,"blah")}).to.throw(St,"blah: expected 1 to have property 'length'"),kt(()=>{kt(1,"blah").to.have.length.below(0)}).to.throw(St,"blah: expected 1 to have property 'length'"),kt(()=>{kt(1).to.have.lengthOf.below(0,"blah")}).to.throw(St,"blah: expected 1 to have property 'length'")}),It("below(n) (dates)",()=>{const e=new Date,t=new Date(e.getTime()-1e3),o=new Date(e.getTime()+1e3);kt(e).to.be.below(o),kt(t).to.be.lessThan(e),kt(e).to.not.be.below(t),kt(o).to.not.be.below(t),kt(()=>{kt(e).to.be.below(t,"blah")}).to.throw(St,"blah: expected "+e.toISOString()+" to be below "+t.toISOString()),kt(()=>{kt(e).to.not.be.below(o,"blah")}).to.throw(St,"blah: expected "+e.toISOString()+" to be at least "+o.toISOString()),kt(()=>{kt("foo").to.have.length.below(2,"blah")}).to.throw(St,"blah: expected 'foo' to have a length below 2 but got 3"),kt(()=>{kt(null).to.be.below(e,"blah")}).to.throw(St,"blah: expected null to be a number or a date"),kt(()=>{kt(1).to.be.below(null,"blah")}).to.throw(St,"blah: the argument to below must be a number"),kt(()=>{kt(e).to.not.be.below(null,"blah")}).to.throw(St,"blah: the argument to below must be a date"),kt(()=>{kt(e).to.have.length.below(0,"blah")}).to.throw(St,"blah: expected "+e.toISOString()+" to have property 'length'"),kt(()=>{kt("asdasd").to.have.length.below(e,"blah")}).to.throw(St,"blah: the argument to below must be a number")}),It("most(n)",()=>{kt(2).to.be.at.most(5),kt(2).to.be.at.most(2),kt(2).to.not.be.at.most(1),kt("foo").to.have.length.of.at.most(4),kt("foo").to.have.lengthOf.at.most(4),kt([1,2,3]).to.have.length.of.at.most(4),kt([1,2,3]).to.have.lengthOf.at.most(4),kt(()=>{kt(6).to.be.at.most(5,"blah")}).to.throw(St,"blah: expected 6 to be at most 5"),kt(()=>{kt(6,"blah").to.be.at.most(5)}).to.throw(St,"blah: expected 6 to be at most 5"),kt(()=>{kt(6).to.not.be.at.most(10,"blah")}).to.throw(St,"blah: expected 6 to be above 10"),kt(()=>{kt("foo").to.have.length.of.at.most(2,"blah")}).to.throw(St,"blah: expected 'foo' to have a length at most 2 but got 3"),kt(()=>{kt("foo","blah").to.have.length.of.at.most(2)}).to.throw(St,"blah: expected 'foo' to have a length at most 2 but got 3"),kt(()=>{kt("foo").to.have.lengthOf.at.most(2,"blah")}).to.throw(St,"blah: expected 'foo' to have a length at most 2 but got 3"),kt(()=>{kt([1,2,3]).to.have.length.of.at.most(2,"blah")}).to.throw(St,"blah: expected [ 1, 2, 3 ] to have a length at most 2 but got 3"),kt(()=>{kt([1,2,3]).to.have.lengthOf.at.most(2,"blah")}).to.throw(St,"blah: expected [ 1, 2, 3 ] to have a length at most 2 but got 3"),kt(()=>{kt([1,2]).to.not.have.length.of.at.most(2,"blah")}).to.throw(St,"blah: expected [ 1, 2 ] to have a length above 2"),kt(()=>{kt([1,2]).to.not.have.lengthOf.at.most(2,"blah")}).to.throw(St,"blah: expected [ 1, 2 ] to have a length above 2"),kt(()=>{kt(null).to.be.at.most(0,"blah")}).to.throw(St,"blah: expected null to be a number or a date"),kt(()=>{kt(null,"blah").to.be.at.most(0)}).to.throw(St,"blah: expected null to be a number or a date"),kt(()=>{kt(1).to.be.at.most(null,"blah")}).to.throw(St,"blah: the argument to most must be a number"),kt(()=>{kt(1,"blah").to.be.at.most(null)}).to.throw(St,"blah: the argument to most must be a number"),kt(()=>{kt(null).to.not.be.at.most(0,"blah")}).to.throw(St,"blah: expected null to be a number or a date"),kt(()=>{kt(1).to.not.be.at.most(null,"blah")}).to.throw(St,"blah: the argument to most must be a number"),kt(()=>{kt(1).to.have.length.of.at.most(0,"blah")}).to.throw(St,"blah: expected 1 to have property 'length'"),kt(()=>{kt(1,"blah").to.have.length.of.at.most(0)}).to.throw(St,"blah: expected 1 to have property 'length'"),kt(()=>{kt(1).to.have.lengthOf.at.most(0,"blah")}).to.throw(St,"blah: expected 1 to have property 'length'")}),It("most(n) (dates)",()=>{const e=new Date,t=new Date(e.getTime()-1e3),o=new Date(e.getTime()+1e3),n=e.toISOString(),a=t.toISOString();kt(e).to.be.at.most(o),kt(e).to.be.at.most(e),kt(e).to.not.be.at.most(t),kt(()=>{kt(e).to.be.at.most(t,"blah")}).to.throw(St,"blah: expected "+n+" to be at most "+a),kt(()=>{kt(e).to.not.be.at.most(e,"blah")}).to.throw(St,"blah: expected "+n+" to be above "+n),kt(()=>{kt(e).to.have.length.of.at.most(2,"blah")}).to.throw(St,"blah: expected "+n+" to have property 'length'"),kt(()=>{kt("foo","blah").to.have.length.of.at.most(e)}).to.throw(St,"blah: the argument to most must be a number"),kt(()=>{kt([1,2,3]).to.not.have.length.of.at.most(e,"blah")}).to.throw(St,"blah: the argument to most must be a number"),kt(()=>{kt(null).to.be.at.most(e,"blah")}).to.throw(St,"blah: expected null to be a number or a date"),kt(()=>{kt(e,"blah").to.be.at.most(null)}).to.throw(St,"blah: the argument to most must be a date"),kt(()=>{kt(1).to.be.at.most(e,"blah")}).to.throw(St,"blah: the argument to most must be a number"),kt(()=>{kt(e,"blah").to.be.at.most(1)}).to.throw(St,"blah: the argument to most must be a date"),kt(()=>{kt(e).to.not.be.at.most(void 0,"blah")}).to.throw(St,"blah: the argument to most must be a date")}),It("match(regexp)",()=>{kt("foobar").to.match(/^foo/),kt("foobar").to.matches(/^foo/),kt("foobar").to.not.match(/^bar/),kt(()=>{kt("foobar").to.match(/^bar/i,"blah")}).to.throw(St,"blah: expected 'foobar' to match /^bar/i"),kt(()=>{kt("foobar","blah").to.match(/^bar/i)}).to.throw(St,"blah: expected 'foobar' to match /^bar/i"),kt(()=>{kt("foobar").to.matches(/^bar/i,"blah")}).to.throw(St,"blah: expected 'foobar' to match /^bar/i"),kt(()=>{kt("foobar").to.not.match(/^foo/i,"blah")}).to.throw(St,"blah: expected 'foobar' not to match /^foo/i")}),It("lengthOf(n)",()=>{kt("test").to.have.length(4),kt("test").to.have.lengthOf(4),kt("test").to.not.have.length(3),kt("test").to.not.have.lengthOf(3),kt([1,2,3]).to.have.length(3),kt([1,2,3]).to.have.lengthOf(3),kt(()=>{kt(4).to.have.length(3,"blah")}).to.throw(St,"blah: expected 4 to have property 'length'"),kt(()=>{kt(4,"blah").to.have.length(3)}).to.throw(St,"blah: expected 4 to have property 'length'"),kt(()=>{kt(4).to.have.lengthOf(3,"blah")}).to.throw(St,"blah: expected 4 to have property 'length'"),kt(()=>{kt("asd").to.not.have.length(3,"blah")}).to.throw(St,"blah: expected 'asd' to not have a length of 3"),kt(()=>{kt("asd").to.not.have.lengthOf(3,"blah")}).to.throw(St,"blah: expected 'asd' to not have a length of 3")}),It("eql(val)",()=>{kt("test").to.eql("test"),kt({foo:"bar"}).to.eql({foo:"bar"}),kt(1).to.eql(1),kt("4").to.not.eql(4),kt(e).to.eql(e),kt(()=>{kt(4).to.eql(3,"blah")}).to.throw(St,"blah: expected 4 to deeply equal 3")}),It("equal(val)",()=>{kt("test").to.equal("test"),kt(1).to.equal(1),kt(e).to.equal(e),kt(()=>{kt(4).to.equal(3,"blah")}).to.throw(St,"blah: expected 4 to equal 3"),kt(()=>{kt(4,"blah").to.equal(3)}).to.throw(St,"blah: expected 4 to equal 3"),kt(()=>{kt("4").to.equal(4,"blah")}).to.throw(St,"blah: expected '4' to equal 4")}),It("deep.equal(val)",()=>{kt({foo:"bar"}).to.deep.equal({foo:"bar"}),kt({foo:"bar"}).not.to.deep.equal({foo:"baz"})}),It("deep.equal(/regexp/)",()=>{kt(/a/).to.deep.equal(/a/),kt(/a/).not.to.deep.equal(/b/),kt(/a/).not.to.deep.equal({}),kt(/a/g).to.deep.equal(/a/g),kt(/a/g).not.to.deep.equal(/b/g),kt(/a/i).to.deep.equal(/a/i),kt(/a/i).not.to.deep.equal(/b/i),kt(/a/m).to.deep.equal(/a/m),kt(/a/m).not.to.deep.equal(/b/m)}),It("deep.equal(Date)",()=>{var e=new Date(1,2,3),t=new Date(4,5,6);kt(e).to.deep.equal(e),kt(e).not.to.deep.equal(t),kt(e).not.to.deep.equal({})}),It("empty",()=>{function e(){}e.prototype.length=0,kt("").to.be.empty,kt("foo").not.to.be.empty,kt([]).to.be.empty,kt(["foo"]).not.to.be.empty,kt(new e).to.be.empty,kt({arguments:0}).not.to.be.empty,kt({}).to.be.empty,kt({foo:"bar"}).not.to.be.empty,kt(()=>{kt(new WeakMap,"blah").not.to.be.empty}).to.throw(St,"blah: .empty was passed a weak collection"),kt(()=>{kt(new WeakSet,"blah").not.to.be.empty}).to.throw(St,"blah: .empty was passed a weak collection"),kt(new Map).to.be.empty;var t=new Map;t.set("a",1),kt(t).not.to.be.empty,kt(()=>{kt(new Map).not.to.be.empty}).to.throw(St,"expected Map{} not to be empty"),(t=new Map).key="val",kt(t).to.be.empty,kt(()=>{kt(t).not.to.be.empty}).to.throw(St,"expected Map{} not to be empty"),kt(new Set).to.be.empty;var o=new Set;o.add(1),kt(o).not.to.be.empty,kt(()=>{kt(new Set).not.to.be.empty}).to.throw(St,"expected Set{} not to be empty"),(o=new Set).key="val",kt(o).to.be.empty,kt(()=>{kt(o).not.to.be.empty}).to.throw(St,"expected Set{} not to be empty"),kt(()=>{kt("","blah").not.to.be.empty}).to.throw(St,"blah: expected '' not to be empty"),kt(()=>{kt("foo").to.be.empty}).to.throw(St,"expected 'foo' to be empty"),kt(()=>{kt([]).not.to.be.empty}).to.throw(St,"expected [] not to be empty"),kt(()=>{kt(["foo"]).to.be.empty}).to.throw(St,"expected [ 'foo' ] to be empty"),kt(()=>{kt(new e).not.to.be.empty}).to.throw(St,"expected FakeArgs{} not to be empty"),kt(()=>{kt({arguments:0}).to.be.empty}).to.throw(St,"expected { arguments: +0 } to be empty"),kt(()=>{kt({}).not.to.be.empty}).to.throw(St,"expected {} not to be empty"),kt(()=>{kt({foo:"bar"}).to.be.empty}).to.throw(St,"expected { foo: 'bar' } to be empty"),kt(()=>{kt(null,"blah").to.be.empty}).to.throw(St,"blah: .empty was passed non-string primitive null"),kt(()=>{kt(void 0).to.be.empty}).to.throw(St,".empty was passed non-string primitive undefined"),kt(()=>{kt().to.be.empty}).to.throw(St,".empty was passed non-string primitive undefined"),kt(()=>{kt(null).to.not.be.empty}).to.throw(St,".empty was passed non-string primitive null"),kt(()=>{kt(void 0).to.not.be.empty}).to.throw(St,".empty was passed non-string primitive undefined"),kt(()=>{kt().to.not.be.empty}).to.throw(St,".empty was passed non-string primitive undefined"),kt(()=>{kt(0).to.be.empty}).to.throw(St,".empty was passed non-string primitive +0"),kt(()=>{kt(1).to.be.empty}).to.throw(St,".empty was passed non-string primitive 1"),kt(()=>{kt(!0).to.be.empty}).to.throw(St,".empty was passed non-string primitive true"),kt(()=>{kt(!1).to.be.empty}).to.throw(St,".empty was passed non-string primitive false"),kt(()=>{kt(Symbol()).to.be.empty}).to.throw(St,".empty was passed non-string primitive Symbol()"),kt(()=>{kt(Symbol.iterator).to.be.empty}).to.throw(St,".empty was passed non-string primitive Symbol(Symbol.iterator)"),kt(()=>{kt(function(){},"blah").to.be.empty}).to.throw(St,"blah: .empty was passed a function"),kt(()=>{kt(e).to.be.empty}).to.throw(St,".empty was passed a function FakeArgs")}),It("string()",()=>{kt("foobar").to.have.string("bar"),kt("foobar").to.have.string("foo"),kt("foobar").to.not.have.string("baz"),kt(()=>{kt(3).to.have.string("baz","blah")}).to.throw(St,"blah: expected 3 to be a string"),kt(()=>{kt(3,"blah").to.have.string("baz")}).to.throw(St,"blah: expected 3 to be a string"),kt(()=>{kt("foobar").to.have.string("baz","blah")}).to.throw(St,"blah: expected 'foobar' to contain 'baz'"),kt(()=>{kt("foobar","blah").to.have.string("baz")}).to.throw(St,"blah: expected 'foobar' to contain 'baz'"),kt(()=>{kt("foobar").to.not.have.string("bar","blah")}).to.throw(St,"blah: expected 'foobar' to not contain 'bar'")}),It("NaN",()=>{kt(NaN).to.be.NaN,kt(void 0).not.to.be.NaN,kt(1/0).not.to.be.NaN,kt("foo").not.to.be.NaN,kt({}).not.to.be.NaN,kt(4).not.to.be.NaN,kt([]).not.to.be.NaN,kt(()=>{kt(NaN,"blah").not.to.be.NaN}).to.throw(St,"blah: expected NaN not to be NaN"),kt(()=>{kt(void 0).to.be.NaN}).to.throw(St,"expected undefined to be NaN"),kt(()=>{kt(1/0).to.be.NaN}).to.throw(St,"expected Infinity to be NaN"),kt(()=>{kt("foo").to.be.NaN}).to.throw(St,"expected 'foo' to be NaN"),kt(()=>{kt({}).to.be.NaN}).to.throw(St,"expected {} to be NaN"),kt(()=>{kt(4).to.be.NaN}).to.throw(St,"expected 4 to be NaN"),kt(()=>{kt([]).to.be.NaN}).to.throw(St,"expected [] to be NaN")}),It("finite",function(){kt(4).to.be.finite,kt(-10).to.be.finite,kt(()=>{kt(NaN,"blah").to.be.finite}).to.throw(St,"blah: expected NaN to be a finite number"),kt(()=>{kt(1/0).to.be.finite}).to.throw(St,"expected Infinity to be a finite number"),kt(()=>{kt("foo").to.be.finite}).to.throw(St,"expected 'foo' to be a finite number"),kt(()=>{kt([]).to.be.finite}).to.throw(St,"expected [] to be a finite number"),kt(()=>{kt({}).to.be.finite}).to.throw(St,"expected {} to be a finite number")}),It("property(name)",function(){kt("test").to.have.property("length"),kt({a:1}).to.have.property("toString"),kt(4).to.not.have.property("length"),kt({"foo.bar":"baz"}).to.have.property("foo.bar"),kt({foo:{bar:"baz"}}).to.not.have.property("foo.bar");var e={foo:void 0};Object.defineProperty(e,"bar",{get:function(){}}),kt(e).to.have.property("foo"),kt(e).to.have.property("bar"),kt({"foo.bar[]":"baz"}).to.have.property("foo.bar[]"),kt(()=>{kt("asd").to.have.property("foo")}).to.throw(St,"expected 'asd' to have property 'foo'"),kt(()=>{kt("asd","blah").to.have.property("foo")}).to.throw(St,"blah: expected 'asd' to have property 'foo'"),kt(()=>{kt({foo:{bar:"baz"}}).to.have.property("foo.bar")}).to.throw(St,"expected { foo: { bar: 'baz' } } to have property 'foo.bar'"),kt(()=>{kt({a:{b:1}}).to.have.own.nested.property("a.b")}).to.throw(St,'The "nested" and "own" flags cannot be combined.'),kt(()=>{kt({a:{b:1}},"blah").to.have.own.nested.property("a.b")}).to.throw(St,'blah: The "nested" and "own" flags cannot be combined.'),kt(()=>{kt(null,"blah").to.have.property("a")}).to.throw(St,"blah: Target cannot be null or undefined."),kt(()=>{kt(void 0,"blah").to.have.property("a")}).to.throw(St,"blah: Target cannot be null or undefined.")}),It("include()",()=>{kt(["foo","bar"]).to.include("foo"),kt(["foo","bar"]).to.include("foo"),kt(["foo","bar"]).to.include("bar"),kt([1,2]).to.include(1),kt(["foo","bar"]).to.not.include("baz"),kt(["foo","bar"]).to.not.include(1),kt({a:1}).to.include({toString:Object.prototype.toString}),kt(new Error("foo")).to.include({message:"foo"});var e={a:1};e[Symbol.toStringTag]="foo",kt(e).to.include({a:1});var t={a:1},o={b:2};kt([t,o]).to.include(t),kt([t,o]).to.not.include({a:1}),kt({foo:t,bar:o}).to.include({foo:t}),kt({foo:t,bar:o}).to.include({foo:t,bar:o}),kt({foo:t,bar:o}).to.not.include({foo:{a:1}}),kt({foo:t,bar:o}).to.not.include({foo:t,bar:{b:2}});var n=new Map,a=[{a:1}];n.set("a",a),n.set("b",2),n.set("c",-0),n.set("d",NaN),kt(n).to.include(a),kt(n).to.not.include([{a:1}]),kt(n).to.include(2),kt(n).to.not.include(3),kt(n).to.include(0),kt(n).to.include(NaN);var r=new Set;a=[{a:1}],r.add(a),r.add(2),r.add(-0),r.add(NaN),kt(r).to.include(a),kt(r).to.not.include([{a:1}]),kt(r).to.include(2),kt(r).to.not.include(3),kt(r).to.include(NaN);var s=new WeakSet;a=[{a:1}],s.add(a),kt(s).to.include(a),kt(s).to.not.include([{a:1}]),kt(s).to.not.include({});var i=Symbol(),l=Symbol(),h=Symbol();kt([i,l]).to.include(i),kt([i,l]).to.not.include(h)}),It("deep.include()",()=>{var e={a:1},t={b:2};kt([e,t]).to.deep.include({a:1}),kt([e,t]).to.not.deep.include({a:9}),kt([e,t]).to.not.deep.include({z:1}),kt({foo:e,bar:t}).to.deep.include({foo:{a:1}}),kt({foo:e,bar:t}).to.deep.include({foo:{a:1},bar:{b:2}}),kt({foo:e,bar:t}).to.not.deep.include({foo:{a:9}}),kt({foo:e,bar:t}).to.not.deep.include({foo:{z:1}}),kt({foo:e,bar:t}).to.not.deep.include({baz:{a:1}}),kt({foo:e,bar:t}).to.not.deep.include({foo:{a:1},bar:{b:9}});var o=new Map;o.set(1,[{a:1}]),kt(o).to.deep.include([{a:1}]);var n=new Set;n.add([{a:1}]),kt(n).to.deep.include([{a:1}])}),It("nested.include()",()=>{kt({a:{b:["x","y"]}}).to.nested.include({"a.b[1]":"y"}),kt({a:{b:["x","y"]}}).to.not.nested.include({"a.b[1]":"x"}),kt({a:{b:["x","y"]}}).to.not.nested.include({"a.c":"y"}),kt({a:{b:[{x:1}]}}).to.not.nested.include({"a.b[0]":{x:1}}),kt({".a":{"[b]":"x"}}).to.nested.include({"\\.a.\\[b\\]":"x"}),kt({".a":{"[b]":"x"}}).to.not.nested.include({"\\.a.\\[b\\]":"y"})}),It("deep.nested.include()",()=>{kt({a:{b:[{x:1}]}}).to.deep.nested.include({"a.b[0]":{x:1}}),kt({a:{b:[{x:1}]}}).to.not.deep.nested.include({"a.b[0]":{y:2}}),kt({a:{b:[{x:1}]}}).to.not.deep.nested.include({"a.c":{x:1}}),kt({".a":{"[b]":{x:1}}}).to.deep.nested.include({"\\.a.\\[b\\]":{x:1}}),kt({".a":{"[b]":{x:1}}}).to.not.deep.nested.include({"\\.a.\\[b\\]":{y:2}})}),It("own.include()",()=>{kt({a:1}).to.own.include({a:1}),kt({a:1}).to.not.own.include({a:3}),kt({a:1}).to.not.own.include({toString:Object.prototype.toString}),kt({a:{b:2}}).to.not.own.include({a:{b:2}})}),It("deep.own.include()",()=>{kt({a:{b:2}}).to.deep.own.include({a:{b:2}}),kt({a:{b:2}}).to.not.deep.own.include({a:{c:3}}),kt({a:{b:2}}).to.not.deep.own.include({toString:Object.prototype.toString})}),It("keys(array|Object|arguments)",()=>{kt({foo:1}).to.have.keys(["foo"]),kt({foo:1}).have.keys({foo:6}),kt({foo:1,bar:2}).to.have.keys(["foo","bar"]),kt({foo:1,bar:2}).to.have.keys("foo","bar"),kt({foo:1,bar:2}).have.keys({foo:6,bar:7}),kt({foo:1,bar:2,baz:3}).to.contain.keys("foo","bar"),kt({foo:1,bar:2,baz:3}).to.contain.keys("bar","foo"),kt({foo:1,bar:2,baz:3}).to.contain.keys("baz"),kt({foo:1,bar:2}).contain.keys({foo:6}),kt({foo:1,bar:2}).contain.keys({bar:7}),kt({foo:1,bar:2}).contain.keys({foo:6}),kt({foo:1,bar:2}).to.contain.keys("foo"),kt({foo:1,bar:2}).to.contain.keys("bar","foo"),kt({foo:1,bar:2}).to.contain.keys(["foo"]),kt({foo:1,bar:2}).to.contain.keys(["bar"]),kt({foo:1,bar:2}).to.contain.keys(["bar","foo"]),kt({foo:1,bar:2,baz:3}).to.contain.all.keys(["bar","foo"]),kt({foo:1,bar:2}).to.not.have.keys("baz"),kt({foo:1,bar:2}).to.not.have.keys("foo"),kt({foo:1,bar:2}).to.not.have.keys("foo","baz"),kt({foo:1,bar:2}).to.not.contain.keys("baz"),kt({foo:1,bar:2}).to.not.contain.keys("foo","baz"),kt({foo:1,bar:2}).to.not.contain.keys("baz","foo"),kt({foo:1,bar:2}).to.have.any.keys("foo","baz"),kt({foo:1,bar:2}).to.have.any.keys("foo"),kt({foo:1,bar:2}).to.contain.any.keys("bar","baz"),kt({foo:1,bar:2}).to.contain.any.keys(["foo"]),kt({foo:1,bar:2}).to.have.all.keys(["bar","foo"]),kt({foo:1,bar:2}).to.contain.all.keys(["bar","foo"]),kt({foo:1,bar:2}).contain.any.keys({foo:6}),kt({foo:1,bar:2}).have.all.keys({foo:6,bar:7}),kt({foo:1,bar:2}).contain.all.keys({bar:7,foo:6}),kt({foo:1,bar:2}).to.not.have.any.keys("baz","abc","def"),kt({foo:1,bar:2}).to.not.have.any.keys("baz"),kt({foo:1,bar:2}).to.not.contain.any.keys("baz"),kt({foo:1,bar:2}).to.not.have.all.keys(["baz","foo"]),kt({foo:1,bar:2}).to.not.contain.all.keys(["baz","foo"]),kt({foo:1,bar:2}).not.have.all.keys({baz:8,foo:7}),kt({foo:1,bar:2}).not.contain.all.keys({baz:8,foo:7});var e="enumProp1",t="enumProp2",o="nonEnumProp";(n={})[e]="enumProp1",n[t]="enumProp2",Object.defineProperty(n,o,{enumerable:!1,value:"nonEnumProp"}),kt(n).to.have.all.keys([e,t]),kt(n).to.not.have.all.keys([e,t,o]);var n,a=Symbol("sym1"),r=Symbol("sym2"),s=Symbol("sym3"),i="str";(n={})[a]="sym1",n[r]="sym2",n[i]="str",Object.defineProperty(n,s,{enumerable:!1,value:"sym3"}),kt(n).to.have.all.keys([a,r,i]),kt(n).to.not.have.all.keys([a,r,s,i]);var l={thisIs:"anExampleObject"},h={doingThisBecauseOf:"referential equality"},b=new Map;b.set(l,"aValue"),b.set(h,"anotherValue"),kt(b).to.have.any.keys(l),kt(b).to.have.any.keys("thisDoesNotExist","thisToo",l),kt(b).to.have.all.keys(l,h),kt(b).to.contain.all.keys(l),kt(b).to.not.contain.all.keys(l,"thisDoesNotExist"),kt(b).to.not.have.any.keys({iDoNot:"exist"}),kt(b).to.not.have.any.keys("thisIsNotAkey",{iDoNot:"exist"},{33:20}),kt(b).to.not.have.all.keys("thisDoesNotExist","thisToo",h),kt(b).to.have.any.keys([l]),kt(b).to.have.any.keys([20,1,l]),kt(b).to.have.all.keys([l,h]),kt(b).to.not.have.any.keys([{13:37},"thisDoesNotExist","thisToo"]),kt(b).to.not.have.any.keys([20,1,{13:37}]),kt(b).to.not.have.all.keys([l,{iDoNot:"exist"}]),kt(b).to.have.any.deep.keys({thisIs:"anExampleObject"}),kt(b).to.have.any.deep.keys("thisDoesNotExist","thisToo",{thisIs:"anExampleObject"}),kt(b).to.contain.all.deep.keys({thisIs:"anExampleObject"}),kt(b).to.not.contain.all.deep.keys({thisIs:"anExampleObject"},"thisDoesNotExist"),kt(b).to.not.have.any.deep.keys({iDoNot:"exist"}),kt(b).to.not.have.any.deep.keys("thisIsNotAkey",{iDoNot:"exist"},{33:20}),kt(b).to.not.have.all.deep.keys("thisDoesNotExist","thisToo",{doingThisBecauseOf:"referential equality"}),kt(b).to.have.any.deep.keys([{thisIs:"anExampleObject"}]),kt(b).to.have.any.deep.keys([20,1,{thisIs:"anExampleObject"}]),kt(b).to.have.all.deep.keys({thisIs:"anExampleObject"},{doingThisBecauseOf:"referential equality"}),kt(b).to.not.have.any.deep.keys([{13:37},"thisDoesNotExist","thisToo"]),kt(b).to.not.have.any.deep.keys([20,1,{13:37}]),kt(b).to.not.have.all.deep.keys([{thisIs:"anExampleObject"},{iDoNot:"exist"}]);var c=Object.create(null),d={toString:NaN},u=new Map;u.set(c,"val1"),u.set(d,"val2"),kt(u).to.have.all.keys([c,d]),kt(u).to.not.have.all.keys([c,[]]);var p=Symbol(),f=Symbol(),w=Symbol(),m=new Map;m.set(p,"val1"),m.set(f,"val2"),kt(m).to.have.all.keys(p,f),kt(m).to.have.any.keys(p,w),kt(m).to.contain.all.keys(f,p),kt(m).to.contain.any.keys(w,p),kt(m).to.not.have.all.keys(p,w),kt(m).to.not.have.any.keys(w),kt(m).to.not.contain.all.keys(w,p),kt(m).to.not.contain.any.keys(w),l={thisIs:"anExampleObject"},h={doingThisBecauseOf:"referential equality"};var y=new Set;y.add(l),y.add(h),kt(y).to.have.any.keys(l),kt(y).to.have.any.keys("thisDoesNotExist","thisToo",l),kt(y).to.have.all.keys(l,h),kt(y).to.contain.all.keys(l),kt(y).to.not.contain.all.keys(l,"thisDoesNotExist"),kt(y).to.not.have.any.keys({iDoNot:"exist"}),kt(y).to.not.have.any.keys("thisIsNotAkey",{iDoNot:"exist"},{33:20}),kt(y).to.not.have.all.keys("thisDoesNotExist","thisToo",h),kt(y).to.have.any.keys([l]),kt(y).to.have.any.keys([20,1,l]),kt(y).to.have.all.keys([l,h]),kt(y).to.not.have.any.keys([{13:37},"thisDoesNotExist","thisToo"]),kt(y).to.not.have.any.keys([20,1,{13:37}]),kt(y).to.not.have.all.keys([l,{iDoNot:"exist"}]),kt(y).to.have.any.deep.keys({thisIs:"anExampleObject"}),kt(y).to.have.any.deep.keys("thisDoesNotExist","thisToo",{thisIs:"anExampleObject"}),kt(y).to.contain.all.deep.keys({thisIs:"anExampleObject"}),kt(y).to.not.contain.all.deep.keys({thisIs:"anExampleObject"},"thisDoesNotExist"),kt(y).to.not.have.any.deep.keys({iDoNot:"exist"}),kt(y).to.not.have.any.deep.keys("thisIsNotAkey",{iDoNot:"exist"},{33:20}),kt(y).to.not.have.all.deep.keys("thisDoesNotExist","thisToo",{doingThisBecauseOf:"referential equality"}),kt(y).to.have.any.deep.keys([{thisIs:"anExampleObject"}]),kt(y).to.have.any.deep.keys([20,1,{thisIs:"anExampleObject"}]),kt(y).to.have.all.deep.keys([{thisIs:"anExampleObject"},{doingThisBecauseOf:"referential equality"}]),kt(y).to.not.have.any.deep.keys([{13:37},"thisDoesNotExist","thisToo"]),kt(y).to.not.have.any.deep.keys([20,1,{13:37}]),kt(y).to.not.have.all.deep.keys([{thisIs:"anExampleObject"},{iDoNot:"exist"}]);var g=Object.create(null),v={toString:NaN},x=new Set;x.add(g),x.add(v),kt(x).to.have.all.keys([g,v]),kt(x).to.not.have.all.keys([g,[]]);var O=Symbol(),N=Symbol(),k=Symbol(),S=new Set;S.add(O),S.add(N),kt(S).to.have.all.keys(O,N),kt(S).to.have.any.keys(O,k),kt(S).to.contain.all.keys(N,O),kt(S).to.contain.any.keys(k,O),kt(S).to.not.have.all.keys(O,k),kt(S).to.not.have.any.keys(k),kt(S).to.not.contain.all.keys(k,O),kt(S).to.not.contain.any.keys(k)}),It("keys(array) will not mutate array (#359)",()=>{var e=["b","a"],t=["b","a"];kt(e).deep.equal(t),kt({b:1,a:1}).keys(t),kt(e).deep.equal(t)}),It("chaining",()=>{var e={name:"chai",extras:["milk","sugar","smile"]};kt(e).to.have.property("extras").with.lengthOf(3),kt(e).to.have.property("extras").which.contains("smile"),kt(()=>{kt(e).to.have.property("extras").with.lengthOf(4)}).to.throw(St,"expected [ 'milk', 'sugar', 'smile' ] to have a length of 4 but got 3"),kt(e).to.be.a("object").and.have.property("name","chai"),kt(function(){throw new Error("testing")}).to.throw(Error).with.property("message","testing")}),It("throw",function(){var e=function(){this.name="PoorlyConstructedError"};function t(e){this.name="CustomError",this.message=e}e.prototype=Object.create(Error.prototype),t.prototype=Error.prototype;var o=new RangeError("boo"),n=function(){},a=function(){throw new Error("testing")},r=function(){throw new ReferenceError("hello")},s=function(){throw new e},i=function(){throw o},l=function(){throw new t("foo")},h=function(){throw new Error("")};kt(n).to.not.throw(),kt(n).to.not.throw(Error),kt(n).to.not.throw(o),kt(a).to.throw(),kt(a).to.throw(Error),kt(a).to.not.throw(ReferenceError),kt(a).to.not.throw(o),kt(r).to.throw(),kt(r).to.throw(ReferenceError),kt(r).to.throw(Error),kt(r).to.not.throw(TypeError),kt(r).to.not.throw(o),kt(s).to.throw(),kt(s).to.throw(e),kt(s).to.throw(Error),kt(s).to.not.throw(o),kt(i).to.throw(o),kt(n).to.not.throw("testing"),kt(n).to.not.throw(/testing/),kt(a).to.throw(/testing/),kt(a).to.not.throw(/hello/),kt(a).to.throw("testing"),kt(a).to.not.throw("hello"),kt(h).to.throw(""),kt(h).to.not.throw("testing"),kt(a).to.throw(""),kt(a).to.throw(Error,/testing/),kt(a).to.throw(Error,"testing"),kt(function(){throw new Error}).to.not.throw(Error,"testing"),kt(a).to.not.throw(Error,"I am the wrong error message"),kt(a).to.not.throw(TypeError,"testing"),kt(()=>{kt(n,"blah").to.throw()}).to.throw(St,/^blah: expected \[Function( goodFn)*\] to throw an error$/),kt(()=>{kt(n,"blah").to.throw(ReferenceError)}).to.throw(St,/^blah: expected \[Function( goodFn)*\] to throw ReferenceError$/),kt(()=>{kt(n,"blah").to.throw(o)}).to.throw(St,/^blah: expected \[Function( goodFn)*\] to throw 'RangeError: boo'$/),kt(()=>{kt(a,"blah").to.not.throw()}).to.throw(St,/^blah: expected \[Function( badFn)*\] to not throw an error but 'Error: testing' was thrown$/),kt(()=>{kt(a,"blah").to.throw(ReferenceError)}).to.throw(St,/^blah: expected \[Function( badFn)*\] to throw 'ReferenceError' but 'Error: testing' was thrown$/),kt(()=>{kt(a,"blah").to.throw(o)}).to.throw(St,/^blah: expected \[Function( badFn)*\] to throw 'RangeError: boo' but 'Error: testing' was thrown$/),kt(()=>{kt(a,"blah").to.not.throw(Error)}).to.throw(St,/^blah: expected \[Function( badFn)*\] to not throw 'Error' but 'Error: testing' was thrown$/),kt(()=>{kt(r,"blah").to.not.throw(ReferenceError)}).to.throw(St,/^blah: expected \[Function( refErrFn)*\] to not throw 'ReferenceError' but 'ReferenceError: hello' was thrown$/),kt(()=>{kt(a,"blah").to.throw(e)}).to.throw(St,/^blah: expected \[Function( badFn)*\] to throw 'PoorlyConstructedError' but 'Error: testing' was thrown$/),kt(()=>{kt(s,"blah").to.not.throw(e)}).to.throw(St,/^blah: (expected \[Function( ickyErrFn)*\] to not throw 'PoorlyConstructedError' but)(.*)(PoorlyConstructedError|\{ Object \()(.*)(was thrown)$/),kt(()=>{kt(s,"blah").to.throw(ReferenceError)}).to.throw(St,/^blah: (expected \[Function( ickyErrFn)*\] to throw 'ReferenceError' but)(.*)(PoorlyConstructedError|\{ Object \()(.*)(was thrown)$/),kt(()=>{kt(i,"blah").to.throw(new ReferenceError("eek"))}).to.throw(St,/^blah: expected \[Function( specificErrFn)*\] to throw 'ReferenceError: eek' but 'RangeError: boo' was thrown$/),kt(()=>{kt(i,"blah").to.not.throw(o)}).to.throw(St,/^blah: expected \[Function( specificErrFn)*\] to not throw 'RangeError: boo'$/),kt(()=>{kt(a,"blah").to.not.throw(/testing/)}).to.throw(St,/^blah: expected \[Function( badFn)*\] to throw error not matching \/testing\/$/),kt(()=>{kt(a,"blah").to.throw(/hello/)}).to.throw(St,/^blah: expected \[Function( badFn)*\] to throw error matching \/hello\/ but got 'testing'$/),kt(()=>{kt(a).to.throw(Error,/hello/,"blah")}).to.throw(St,/^blah: expected \[Function( badFn)*\] to throw error matching \/hello\/ but got 'testing'$/),kt(()=>{kt(a,"blah").to.throw(Error,/hello/)}).to.throw(St,/^blah: expected \[Function( badFn)*\] to throw error matching \/hello\/ but got 'testing'$/),kt(()=>{kt(a).to.throw(Error,"hello","blah")}).to.throw(St,/^blah: expected \[Function( badFn)*\] to throw error including 'hello' but got 'testing'$/),kt(()=>{kt(a,"blah").to.throw(Error,"hello")}).to.throw(St,/^blah: expected \[Function( badFn)*\] to throw error including 'hello' but got 'testing'$/),kt(()=>{kt(l,"blah").to.not.throw()}).to.throw(St,/^blah: expected \[Function( customErrFn)*\] to not throw an error but 'CustomError: foo' was thrown$/),kt(()=>{kt(a).to.not.throw(Error,"testing","blah")}).to.throw(St,/^blah: expected \[Function( badFn)*\] to not throw 'Error' but 'Error: testing' was thrown$/),kt(()=>{kt(a,"blah").to.not.throw(Error,"testing")}).to.throw(St,/^blah: expected \[Function( badFn)*\] to not throw 'Error' but 'Error: testing' was thrown$/),kt(()=>{kt(h).to.not.throw(Error,"","blah")}).to.throw(St,/^blah: expected \[Function( emptyStringErrFn)*\] to not throw 'Error' but 'Error' was thrown$/),kt(()=>{kt(h,"blah").to.not.throw(Error,"")}).to.throw(St,/^blah: expected \[Function( emptyStringErrFn)*\] to not throw 'Error' but 'Error' was thrown$/),kt(()=>{kt(h,"blah").to.not.throw("")}).to.throw(St,/^blah: expected \[Function( emptyStringErrFn)*\] to throw error not including ''$/),kt(()=>{kt({},"blah").to.throw()}).to.throw(St,"blah: expected {} to be a function"),kt(()=>{kt({}).to.throw(Error,"testing","blah")}).to.throw(St,"blah: expected {} to be a function")}),It("respondTo",()=>{function e(){}e.prototype.bar=function(){},e.func=function(){};var t={foo:function(){}};kt(e).to.respondTo("bar"),kt(e).to.not.respondTo("foo"),kt(e).itself.to.respondTo("func"),kt(e).itself.not.to.respondTo("bar"),kt(t).to.respondTo("foo"),kt(()=>{kt(e).to.respondTo("baz","constructor")}).to.throw(St,/^(constructor: expected)(.*)(\[Function Foo\])(.*)(to respond to \'baz\')$/),kt(()=>{kt(e,"constructor").to.respondTo("baz")}).to.throw(St,/^(constructor: expected)(.*)(\[Function Foo\])(.*)(to respond to \'baz\')$/),kt(()=>{kt(t).to.respondTo("baz","object")}).to.throw(St,/^(object: expected)(.*)(\{ foo: \[Function\] \}|\{ Object \()(.*)(to respond to \'baz\')$/),kt(()=>{kt(t,"object").to.respondTo("baz")}).to.throw(St,/^(object: expected)(.*)(\{ foo: \[Function\] \}|\{ Object \()(.*)(to respond to \'baz\')$/)}),It("satisfy",()=>{var e=function(e){return 1===e};kt(1).to.satisfy(e),kt(()=>{kt(2).to.satisfy(e,"blah")}).to.throw(St,/^blah: expected 2 to satisfy \[Function( matcher)*\]$/),kt(()=>{kt(2,"blah").to.satisfy(e)}).to.throw(St,/^blah: expected 2 to satisfy \[Function( matcher)*\]$/)}),It("closeTo",()=>{kt(1.5).to.be.closeTo(1,.5),kt(10).to.be.closeTo(20,20),kt(-10).to.be.closeTo(20,30)}),It("approximately",()=>{kt(1.5).to.be.approximately(1,.5),kt(10).to.be.approximately(20,20),kt(-10).to.be.approximately(20,30)}),It("oneOf",()=>{kt(1).to.be.oneOf([1,2,3]),kt("1").to.not.be.oneOf([1,2,3]),kt([3,[4]]).to.not.be.oneOf([1,2,[3,4]]);var e=[3,[4]];kt(e).to.be.oneOf([1,2,e])}),It("include.members",()=>{kt([1,2,3]).to.include.members([]),kt([1,2,3]).to.include.members([3,2]),kt([1,2,3]).to.include.members([3,2,2]),kt([1,2,3]).to.not.include.members([8,4]),kt([1,2,3]).to.not.include.members([1,2,3,4]),kt([{a:1}]).to.not.include.members([{a:1}]),kt(()=>{kt([1,2,3]).to.include.members([2,5],"blah")}).to.throw(St,"blah: expected [ 1, 2, 3 ] to be a superset of [ 2, 5 ]"),kt(()=>{kt([1,2,3],"blah").to.include.members([2,5])}).to.throw(St,"blah: expected [ 1, 2, 3 ] to be a superset of [ 2, 5 ]"),kt(()=>{kt([1,2,3]).to.not.include.members([2,1])}).to.throw(St,"expected [ 1, 2, 3 ] to not be a superset of [ 2, 1 ]")}),It("same.members",()=>{kt([5,4]).to.have.same.members([4,5]),kt([5,4]).to.have.same.members([5,4]),kt([5,4,4]).to.have.same.members([5,4,4]),kt([5,4]).to.not.have.same.members([]),kt([5,4]).to.not.have.same.members([6,3]),kt([5,4]).to.not.have.same.members([5,4,2]),kt([5,4]).to.not.have.same.members([5,4,4]),kt([5,4,4]).to.not.have.same.members([5,4]),kt([5,4,4]).to.not.have.same.members([5,4,3]),kt([5,4,3]).to.not.have.same.members([5,4,4])}),It("members",()=>{kt([5,4]).members([4,5]),kt([5,4]).members([5,4]),kt([5,4,4]).members([5,4,4]),kt([5,4]).not.members([]),kt([5,4]).not.members([6,3]),kt([5,4]).not.members([5,4,2]),kt([5,4]).not.members([5,4,4]),kt([5,4,4]).not.members([5,4]),kt([5,4,4]).not.members([5,4,3]),kt([5,4,3]).not.members([5,4,4]),kt([{id:1}]).not.members([{id:1}]),kt(()=>{kt([1,2,3]).members([2,1,5],"blah")}).to.throw(St,"blah: expected [ 1, 2, 3 ] to have the same members as [ 2, 1, 5 ]"),kt(()=>{kt([1,2,3],"blah").members([2,1,5])}).to.throw(St,"blah: expected [ 1, 2, 3 ] to have the same members as [ 2, 1, 5 ]"),kt(()=>{kt([1,2,3]).not.members([2,1,3])}).to.throw(St,"expected [ 1, 2, 3 ] to not have the same members as [ 2, 1, 3 ]"),kt(()=>{kt({}).members([],"blah")}).to.throw(St,"blah: expected {} to be an iterable"),kt(()=>{kt({},"blah").members([])}).to.throw(St,"blah: expected {} to be an iterable"),kt(()=>{kt([]).members({},"blah")}).to.throw(St,"blah: expected {} to be an iterable"),kt(()=>{kt([],"blah").members({})}).to.throw(St,"blah: expected {} to be an iterable")}),It("deep.members",()=>{kt([{id:1}]).deep.members([{id:1}]),kt([{a:1},{b:2},{b:2}]).deep.members([{a:1},{b:2},{b:2}]),kt([{id:2}]).not.deep.members([{id:1}]),kt([{a:1},{b:2}]).not.deep.members([{a:1},{b:2},{b:2}]),kt([{a:1},{b:2},{b:2}]).not.deep.members([{a:1},{b:2}]),kt([{a:1},{b:2},{b:2}]).not.deep.members([{a:1},{b:2},{c:3}]),kt([{a:1},{b:2},{c:3}]).not.deep.members([{a:1},{b:2},{b:2}]),kt(()=>{kt([{id:1}]).deep.members([{id:2}],"blah")}).to.throw(St,"blah: expected [ { id: 1 } ] to have the same members as [ { id: 2 } ]"),kt(()=>{kt([{id:1}],"blah").deep.members([{id:2}])}).to.throw(St,"blah: expected [ { id: 1 } ] to have the same members as [ { id: 2 } ]")}),It("include.deep.members",()=>{kt([{a:1},{b:2},{c:3}]).include.deep.members([{b:2},{a:1}]),kt([{a:1},{b:2},{c:3}]).include.deep.members([{b:2},{a:1},{a:1}]),kt([{a:1},{b:2},{c:3}]).not.include.deep.members([{b:2},{a:1},{f:5}]),kt(()=>{kt([{a:1},{b:2},{c:3}]).include.deep.members([{b:2},{a:1},{f:5}],"blah")}).to.throw(St,"blah: expected [ { a: 1 }, { b: 2 }, { c: 3 } ] to be a superset of [ { b: 2 }, { a: 1 }, { f: 5 } ]"),kt(()=>{kt([{a:1},{b:2},{c:3}],"blah").include.deep.members([{b:2},{a:1},{f:5}])}).to.throw(St,"blah: expected [ { a: 1 }, { b: 2 }, { c: 3 } ] to be a superset of [ { b: 2 }, { a: 1 }, { f: 5 } ]")}),It("ordered.members",()=>{kt([1,2,3]).ordered.members([1,2,3]),kt([1,2,2]).ordered.members([1,2,2]),kt([1,2,3]).not.ordered.members([2,1,3]),kt([1,2,3]).not.ordered.members([1,2]),kt([1,2]).not.ordered.members([1,2,2]),kt([1,2,2]).not.ordered.members([1,2]),kt([1,2,2]).not.ordered.members([1,2,3]),kt([1,2,3]).not.ordered.members([1,2,2]),kt(()=>{kt([1,2,3]).ordered.members([2,1,3],"blah")}).to.throw(St,"blah: expected [ 1, 2, 3 ] to have the same ordered members as [ 2, 1, 3 ]"),kt(()=>{kt([1,2,3],"blah").ordered.members([2,1,3])}).to.throw(St,"blah: expected [ 1, 2, 3 ] to have the same ordered members as [ 2, 1, 3 ]"),kt(()=>{kt([1,2,3]).not.ordered.members([1,2,3])}).to.throw(St,"expected [ 1, 2, 3 ] to not have the same ordered members as [ 1, 2, 3 ]")}),It("include.ordered.members",()=>{kt([1,2,3]).include.ordered.members([1,2]),kt([1,2,3]).not.include.ordered.members([2,1]),kt([1,2,3]).not.include.ordered.members([2,3]),kt([1,2,3]).not.include.ordered.members([1,2,2]),kt(()=>{kt([1,2,3]).include.ordered.members([2,1],"blah")}).to.throw(St,"blah: expected [ 1, 2, 3 ] to be an ordered superset of [ 2, 1 ]"),kt(()=>{kt([1,2,3],"blah").include.ordered.members([2,1])}).to.throw(St,"blah: expected [ 1, 2, 3 ] to be an ordered superset of [ 2, 1 ]"),kt(()=>{kt([1,2,3]).not.include.ordered.members([1,2])}).to.throw(St,"expected [ 1, 2, 3 ] to not be an ordered superset of [ 1, 2 ]")}),It("deep.ordered.members",()=>{kt([{a:1},{b:2},{c:3}]).deep.ordered.members([{a:1},{b:2},{c:3}]),kt([{a:1},{b:2},{b:2}]).deep.ordered.members([{a:1},{b:2},{b:2}]),kt([{a:1},{b:2},{c:3}]).not.deep.ordered.members([{b:2},{a:1},{c:3}]),kt([{a:1},{b:2}]).not.deep.ordered.members([{a:1},{b:2},{b:2}]),kt([{a:1},{b:2},{b:2}]).not.deep.ordered.members([{a:1},{b:2}]),kt([{a:1},{b:2},{b:2}]).not.deep.ordered.members([{a:1},{b:2},{c:3}]),kt([{a:1},{b:2},{c:3}]).not.deep.ordered.members([{a:1},{b:2},{b:2}]),kt(()=>{kt([{a:1},{b:2},{c:3}]).deep.ordered.members([{b:2},{a:1},{c:3}],"blah")}).to.throw(St,"blah: expected [ { a: 1 }, { b: 2 }, { c: 3 } ] to have the same ordered members as [ { b: 2 }, { a: 1 }, { c: 3 } ]"),kt(()=>{kt([{a:1},{b:2},{c:3}],"blah").deep.ordered.members([{b:2},{a:1},{c:3}])}).to.throw(St,"blah: expected [ { a: 1 }, { b: 2 }, { c: 3 } ] to have the same ordered members as [ { b: 2 }, { a: 1 }, { c: 3 } ]"),kt(()=>{kt([{a:1},{b:2},{c:3}]).not.deep.ordered.members([{a:1},{b:2},{c:3}])}).to.throw(St,"expected [ { a: 1 }, { b: 2 }, { c: 3 } ] to not have the same ordered members as [ { a: 1 }, { b: 2 }, { c: 3 } ]")}),It("include.deep.ordered.members",()=>{kt([{a:1},{b:2},{c:3}]).include.deep.ordered.members([{a:1},{b:2}]),kt([{a:1},{b:2},{c:3}]).not.include.deep.ordered.members([{b:2},{a:1}]),kt([{a:1},{b:2},{c:3}]).not.include.deep.ordered.members([{b:2},{c:3}]),kt([{a:1},{b:2},{c:3}]).not.include.deep.ordered.members([{a:1},{b:2},{b:2}]),kt(()=>{kt([{a:1},{b:2},{c:3}]).include.deep.ordered.members([{b:2},{a:1}],"blah")}).to.throw(St,"blah: expected [ { a: 1 }, { b: 2 }, { c: 3 } ] to be an ordered superset of [ { b: 2 }, { a: 1 } ]"),kt(()=>{kt([{a:1},{b:2},{c:3}],"blah").include.deep.ordered.members([{b:2},{a:1}])}).to.throw(St,"blah: expected [ { a: 1 }, { b: 2 }, { c: 3 } ] to be an ordered superset of [ { b: 2 }, { a: 1 } ]"),kt(()=>{kt([{a:1},{b:2},{c:3}]).not.include.deep.ordered.members([{a:1},{b:2}])}).to.throw(St,"expected [ { a: 1 }, { b: 2 }, { c: 3 } ] to not be an ordered superset of [ { a: 1 }, { b: 2 } ]")}),It("change",()=>{const e={value:10,str:"foo"},t=["spiderman","superman"],o=()=>e.value+=5,n=()=>e.value-=20,a=()=>"foobar",r=()=>t.push("batman"),s=()=>t.length;kt(o).to.change(e,"value"),kt(o).to.change(e,"value").by(5),kt(o).to.change(e,"value").by(-5),kt(n).to.change(e,"value").by(20),kt(n).to.change(e,"value").but.not.by(21),kt(a).to.not.change(e,"value"),kt(a).to.not.change(e,"str"),kt(()=>e.str+="!").to.change(e,"str"),kt(r).to.change(s).by(1),kt(r).to.change(s).but.not.by(2),kt(()=>{kt(a).to.change(e,"value","blah")}).to.throw(St,"blah: expected .value to change"),kt(()=>{kt(a,"blah").to.change(e,"value")}).to.throw(St,"blah: expected .value to change"),kt(()=>{kt(o).to.not.change(e,"value","blah")}).to.throw(St,"blah: expected .value to not change"),kt(()=>{kt({}).to.change(e,"value","blah")}).to.throw(St,"blah: expected {} to be a function"),kt(()=>{kt({},"blah").to.change(e,"value")}).to.throw(St,"blah: expected {} to be a function"),kt(()=>{kt(o).to.change({},"badprop","blah")}).to.throw(St,"blah: expected {} to have property 'badprop'"),kt(()=>{kt(o,"blah").to.change({},"badprop")}).to.throw(St,"blah: expected {} to have property 'badprop'"),kt(()=>{kt(o,"blah").to.change({})}).to.throw(St,"blah: expected {} to be a function"),kt(()=>{kt(o).to.change(e,"value").by(10,"blah")}).to.throw(St,"blah: expected .value to change by 10"),kt(()=>{kt(o,"blah").to.change(e,"value").by(10)}).to.throw(St,"blah: expected .value to change by 10"),kt(()=>{kt(o).to.change(e,"value").but.not.by(5,"blah")}).to.throw(St,"blah: expected .value to not change by 5")}),It("increase, decrease",()=>{var e={value:10,noop:null},t=["one","two"],o=function(){t.push("three")},n=function(){t.pop()},a=function(){return null},r=function(){return t.length},s=function(){e.value+=2},i=function(){e.value-=3},l=function(){e.value+=0};kt(l).to.not.increase(e,"value"),kt(i).to.not.increase(e,"value"),kt(s).to.increase(e,"value"),kt(s).to.increase(e,"value").by(2),kt(s).to.increase(e,"value").but.not.by(1),kt(l).to.not.decrease(e,"value"),kt(s).to.not.decrease(e,"value"),kt(i).to.decrease(e,"value"),kt(i).to.decrease(e,"value").by(3),kt(i).to.decrease(e,"value").but.not.by(2),kt(n).to.not.increase(r),kt(a).to.not.increase(r),kt(o).to.increase(r),kt(o).to.increase(r).by(1),kt(o).to.increase(r).but.not.by(2),kt(n).to.decrease(r),kt(n).to.decrease(r).by(1),kt(n).to.decrease(r).but.not.by(2),kt(a).to.not.decrease(r),kt(o).to.not.decrease(r)}),It("extensible",function(){const t=Object.preventExtensions({});kt({}).to.be.extensible,kt(t).to.not.be.extensible,kt(()=>{kt(t,"blah").to.be.extensible}).to.throw(St,"blah: expected {} to be extensible"),kt(()=>{kt({}).to.not.be.extensible}).to.throw(St,"expected {} to not be extensible"),kt(42).to.not.be.extensible,kt(null).to.not.be.extensible,kt("foo").to.not.be.extensible,kt(!1).to.not.be.extensible,kt(void 0).to.not.be.extensible,kt(e).to.not.be.extensible,kt(()=>{kt(42).to.be.extensible}).to.throw(St,"expected 42 to be extensible"),kt(()=>{kt(null).to.be.extensible}).to.throw(St,"expected null to be extensible"),kt(()=>{kt("foo").to.be.extensible}).to.throw(St,"expected 'foo' to be extensible"),kt(()=>{kt(!1).to.be.extensible}).to.throw(St,"expected false to be extensible"),kt(()=>{kt(void 0).to.be.extensible}).to.throw(St,"expected undefined to be extensible");const o=new Proxy({},{isExtensible(){throw new TypeError}});kt(()=>{kt(o).to.be.extensible}).to.throw(TypeError)}),It("sealed",function(){const t=Object.seal({});kt(t).to.be.sealed,kt({}).to.not.be.sealed,kt(()=>{kt({}).to.be.sealed}).to.throw(St,"expected {} to be sealed"),kt(()=>{kt(t).to.not.be.sealed}).to.throw(St,"expected {} to not be sealed"),kt(42).to.be.sealed,kt(null).to.be.sealed,kt("foo").to.be.sealed,kt(!1).to.be.sealed,kt(void 0).to.be.sealed,kt(e).to.be.sealed,kt(()=>{kt(42).to.not.be.sealed}).to.throw(St,"expected 42 to not be sealed"),kt(()=>{kt(null).to.not.be.sealed}).to.throw(St,"expected null to not be sealed"),kt(()=>{kt("foo").to.not.be.sealed}).to.throw(St,"expected 'foo' to not be sealed"),kt(()=>{kt(!1).to.not.be.sealed}).to.throw(St,"expected false to not be sealed"),kt(()=>{kt(void 0).to.not.be.sealed}).to.throw(St,"expected undefined to not be sealed");const o=new Proxy({},{ownKeys(){throw new TypeError}});Object.preventExtensions(o),kt(()=>{kt(o).to.be.sealed}).to.throw(TypeError)}),It("frozen",function(){const t=Object.freeze({});kt(t).to.be.frozen,kt({}).to.not.be.frozen,kt(()=>{kt({}).to.be.frozen}).to.throw(St,"expected {} to be frozen"),kt(()=>{kt(t).to.not.be.frozen}).to.throw(St,"expected {} to not be frozen"),kt(42).to.be.frozen,kt(null).to.be.frozen,kt("foo").to.be.frozen,kt(!1).to.be.frozen,kt(void 0).to.be.frozen,kt(e).to.be.frozen,kt(()=>{kt(42).to.not.be.frozen}).to.throw(St,"expected 42 to not be frozen"),kt(()=>{kt(null).to.not.be.frozen}).to.throw(St,"expected null to not be frozen"),kt(()=>{kt("foo").to.not.be.frozen}).to.throw(St,"expected 'foo' to not be frozen"),kt(()=>{kt(!1).to.not.be.frozen}).to.throw(St,"expected false to not be frozen"),kt(()=>{kt(void 0).to.not.be.frozen}).to.throw(St,"expected undefined to not be frozen");const o=new Proxy({},{ownKeys(){throw new TypeError}});Object.preventExtensions(o),kt(()=>{kt(o).to.be.frozen}).to.throw(TypeError)})}),self.WTBenchmark=t})();
//# sourceMappingURL=chai.bundle.min.js.map